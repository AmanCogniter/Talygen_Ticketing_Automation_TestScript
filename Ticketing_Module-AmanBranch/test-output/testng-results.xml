<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="14" total="98" passed="75" failed="5" skipped="4">
  <reporter-output>
    <line>
      <![CDATA[Policy checkbox clicked]]>
    </line>
    <line>
      <![CDATA[Policy checkbox clicked]]>
    </line>
    <line>
      <![CDATA[Policy checkbox clicked]]>
    </line>
    <line>
      <![CDATA[Policy checkbox clicked]]>
    </line>
    <line>
      <![CDATA[Policy checkbox clicked]]>
    </line>
    <line>
      <![CDATA[Policy checkbox clicked]]>
    </line>
    <line>
      <![CDATA[Policy checkbox clicked]]>
    </line>
    <line>
      <![CDATA[Policy checkbox clicked]]>
    </line>
    <line>
      <![CDATA[Policy checkbox clicked]]>
    </line>
    <line>
      <![CDATA[Policy checkbox clicked]]>
    </line>
    <line>
      <![CDATA[Policy checkbox clicked]]>
    </line>
    <line>
      <![CDATA[Policy checkbox clicked]]>
    </line>
  </reporter-output>
  <suite started-at="2022-12-08T10:06:22 IST" name="Suite" finished-at="2022-12-08T13:40:32 IST" duration-ms="12849371">
    <groups>
    </groups>
    <test started-at="2022-12-08T10:06:22 IST" name="Test" finished-at="2022-12-08T13:40:32 IST" duration-ms="12849371">
      <class name="testcases.TicketingDashboardTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T10:52:00 IST" name="setUp" finished-at="2022-12-08T10:52:11 IST" duration-ms="11491" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T10:52:11 IST" name="beforeMethod" finished-at="2022-12-08T10:52:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyReportsValidation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyReportsValidation()[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T10:52:11 IST" name="verifyReportsValidation" finished-at="2022-12-08T10:53:34 IST" duration-ms="82368" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Save -  element not clikabke]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Save -  element not clikabke
at org.testng.Assert.fail(Assert.java:99)
at utils.WebBasePage.click(WebBasePage.java:91)
at pageobjects.TicketingDashboardPage.clickSaveButton(TicketingDashboardPage.java:156)
at pageobjects.TicketingDashboardPage.selectAllReports(TicketingDashboardPage.java:161)
at action.TicketingDashboardAction.validateReportsValidation(TicketingDashboardAction.java:40)
at testcases.TicketingDashboardTest.verifyReportsValidation(TicketingDashboardTest.java:26)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyReportsValidation -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T10:53:34 IST" name="reportWrapUp" finished-at="2022-12-08T10:53:34 IST" duration-ms="291" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyReportsValidation status=FAILURE method=TicketingDashboardTest.verifyReportsValidation()[pri:0, instance:testcases.TicketingDashboardTest@6356695f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyReportsValidation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="validateWidgetsCount()[pri:1, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T10:53:34 IST" name="validateWidgetsCount" finished-at="2022-12-08T10:55:14 IST" duration-ms="100341" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateWidgetsCount -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T10:53:34 IST" name="beforeMethod" finished-at="2022-12-08T10:53:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.validateWidgetsCount()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T10:55:14 IST" name="reportWrapUp" finished-at="2022-12-08T10:55:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateWidgetsCount status=SUCCESS method=TicketingDashboardTest.validateWidgetsCount()[pri:1, instance:testcases.TicketingDashboardTest@6356695f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.validateWidgetsCount()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T10:55:14 IST" name="beforeMethod" finished-at="2022-12-08T10:55:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyTodaysFilter()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTodaysFilter()[pri:3, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T10:55:14 IST" name="verifyTodaysFilter" finished-at="2022-12-08T11:01:36 IST" duration-ms="381853" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTodaysFilter -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:01:36 IST" name="reportWrapUp" finished-at="2022-12-08T11:01:36 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTodaysFilter status=SUCCESS method=TicketingDashboardTest.verifyTodaysFilter()[pri:3, instance:testcases.TicketingDashboardTest@6356695f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyTodaysFilter()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:01:36 IST" name="beforeMethod" finished-at="2022-12-08T11:01:36 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyThisYearFilter()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyThisYearFilter()[pri:4, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:01:36 IST" name="verifyThisYearFilter" finished-at="2022-12-08T11:05:05 IST" duration-ms="208720" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyThisYearFilter -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:05:05 IST" name="reportWrapUp" finished-at="2022-12-08T11:05:05 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyThisYearFilter status=SUCCESS method=TicketingDashboardTest.verifyThisYearFilter()[pri:4, instance:testcases.TicketingDashboardTest@6356695f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyThisYearFilter()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:05:05 IST" name="beforeMethod" finished-at="2022-12-08T11:05:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyYesterDayFilter()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyYesterDayFilter()[pri:5, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:05:05 IST" name="verifyYesterDayFilter" finished-at="2022-12-08T11:07:34 IST" duration-ms="148505" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyYesterDayFilter -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:07:34 IST" name="reportWrapUp" finished-at="2022-12-08T11:07:34 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyYesterDayFilter status=SUCCESS method=TicketingDashboardTest.verifyYesterDayFilter()[pri:5, instance:testcases.TicketingDashboardTest@6356695f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyYesterDayFilter()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:07:34 IST" name="beforeMethod" finished-at="2022-12-08T11:07:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyLastWeekFilter()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyLastWeekFilter()[pri:6, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:07:34 IST" name="verifyLastWeekFilter" finished-at="2022-12-08T11:10:55 IST" duration-ms="201907" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLastWeekFilter -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:10:55 IST" name="reportWrapUp" finished-at="2022-12-08T11:10:55 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLastWeekFilter status=SUCCESS method=TicketingDashboardTest.verifyLastWeekFilter()[pri:6, instance:testcases.TicketingDashboardTest@6356695f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyLastWeekFilter()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:10:55 IST" name="beforeMethod" finished-at="2022-12-08T11:10:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyThisWeekFilter()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyThisWeekFilter()[pri:7, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:10:55 IST" name="verifyThisWeekFilter" finished-at="2022-12-08T11:14:16 IST" duration-ms="200227" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyThisWeekFilter -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:14:16 IST" name="reportWrapUp" finished-at="2022-12-08T11:14:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyThisWeekFilter status=SUCCESS method=TicketingDashboardTest.verifyThisWeekFilter()[pri:7, instance:testcases.TicketingDashboardTest@6356695f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyThisWeekFilter()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:14:16 IST" name="beforeMethod" finished-at="2022-12-08T11:14:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyThisMonthFilter()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyThisMonthFilter()[pri:8, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:14:16 IST" name="verifyThisMonthFilter" finished-at="2022-12-08T11:17:49 IST" duration-ms="213678" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyThisMonthFilter -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:17:49 IST" name="reportWrapUp" finished-at="2022-12-08T11:17:49 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyThisMonthFilter status=SUCCESS method=TicketingDashboardTest.verifyThisMonthFilter()[pri:8, instance:testcases.TicketingDashboardTest@6356695f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyThisMonthFilter()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:17:49 IST" name="beforeMethod" finished-at="2022-12-08T11:17:49 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyLastMonthFilter()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyLastMonthFilter()[pri:9, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:17:49 IST" name="verifyLastMonthFilter" finished-at="2022-12-08T11:20:16 IST" duration-ms="146566" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLastMonthFilter -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:20:16 IST" name="reportWrapUp" finished-at="2022-12-08T11:20:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLastMonthFilter status=SUCCESS method=TicketingDashboardTest.verifyLastMonthFilter()[pri:9, instance:testcases.TicketingDashboardTest@6356695f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyLastMonthFilter()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="verifyTodayFilterFromCategory()[pri:10, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:20:16 IST" name="verifyTodayFilterFromCategory" finished-at="2022-12-08T11:24:42 IST" duration-ms="265758" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTodayFilterFromCategory -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:20:16 IST" name="beforeMethod" finished-at="2022-12-08T11:20:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyTodayFilterFromCategory()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:24:42 IST" name="reportWrapUp" finished-at="2022-12-08T11:24:42 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTodayFilterFromCategory status=SUCCESS method=TicketingDashboardTest.verifyTodayFilterFromCategory()[pri:10, instance:testcases.TicketingDashboardTest@6356695f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyTodayFilterFromCategory()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:24:42 IST" name="beforeMethod" finished-at="2022-12-08T11:24:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyThisWeekFilterFromCategory()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyThisWeekFilterFromCategory()[pri:11, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:24:42 IST" name="verifyThisWeekFilterFromCategory" finished-at="2022-12-08T11:27:16 IST" duration-ms="154262" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyThisWeekFilterFromCategory -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:27:16 IST" name="reportWrapUp" finished-at="2022-12-08T11:27:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyThisWeekFilterFromCategory status=SUCCESS method=TicketingDashboardTest.verifyThisWeekFilterFromCategory()[pri:11, instance:testcases.TicketingDashboardTest@6356695f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyThisWeekFilterFromCategory()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:27:16 IST" name="beforeMethod" finished-at="2022-12-08T11:27:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyYesterdayFilterFromCategory()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyYesterdayFilterFromCategory()[pri:14, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:27:16 IST" name="verifyYesterdayFilterFromCategory" finished-at="2022-12-08T11:29:47 IST" duration-ms="151015" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyYesterdayFilterFromCategory -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:29:47 IST" name="reportWrapUp" finished-at="2022-12-08T11:29:47 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyYesterdayFilterFromCategory status=SUCCESS method=TicketingDashboardTest.verifyYesterdayFilterFromCategory()[pri:14, instance:testcases.TicketingDashboardTest@6356695f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyYesterdayFilterFromCategory()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:29:47 IST" name="beforeMethod" finished-at="2022-12-08T11:29:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyYesterdayFilterByChannel()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyYesterdayFilterByChannel()[pri:17, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:29:47 IST" name="verifyYesterdayFilterByChannel" finished-at="2022-12-08T11:36:18 IST" duration-ms="390635" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyYesterdayFilterByChannel -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:36:18 IST" name="reportWrapUp" finished-at="2022-12-08T11:36:18 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyYesterdayFilterByChannel status=SUCCESS method=TicketingDashboardTest.verifyYesterdayFilterByChannel()[pri:17, instance:testcases.TicketingDashboardTest@6356695f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyYesterdayFilterByChannel()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:36:18 IST" name="beforeMethod" finished-at="2022-12-08T11:36:18 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyTodaysFilterByChannel()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTodaysFilterByChannel()[pri:18, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:36:18 IST" name="verifyTodaysFilterByChannel" finished-at="2022-12-08T11:38:55 IST" duration-ms="157117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTodaysFilterByChannel -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:38:55 IST" name="reportWrapUp" finished-at="2022-12-08T11:38:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTodaysFilterByChannel status=SUCCESS method=TicketingDashboardTest.verifyTodaysFilterByChannel()[pri:18, instance:testcases.TicketingDashboardTest@6356695f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyTodaysFilterByChannel()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="verifyThisWeekByChannel()[pri:19, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:38:55 IST" name="verifyThisWeekByChannel" finished-at="2022-12-08T11:41:43 IST" duration-ms="168157" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyThisWeekByChannel -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:38:55 IST" name="beforeMethod" finished-at="2022-12-08T11:38:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyThisWeekByChannel()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:41:43 IST" name="reportWrapUp" finished-at="2022-12-08T11:41:43 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyThisWeekByChannel status=SUCCESS method=TicketingDashboardTest.verifyThisWeekByChannel()[pri:19, instance:testcases.TicketingDashboardTest@6356695f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyThisWeekByChannel()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:41:43 IST" name="beforeMethod" finished-at="2022-12-08T11:41:43 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyLastWeekByChannel()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyLastWeekByChannel()[pri:20, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:41:43 IST" name="verifyLastWeekByChannel" finished-at="2022-12-08T11:44:21 IST" duration-ms="158119" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLastWeekByChannel -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:44:21 IST" name="reportWrapUp" finished-at="2022-12-08T11:44:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLastWeekByChannel status=SUCCESS method=TicketingDashboardTest.verifyLastWeekByChannel()[pri:20, instance:testcases.TicketingDashboardTest@6356695f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyLastWeekByChannel()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:44:21 IST" name="beforeMethod" finished-at="2022-12-08T11:44:21 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyThisMonthByChannel()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyThisMonthByChannel()[pri:21, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:44:21 IST" name="verifyThisMonthByChannel" finished-at="2022-12-08T11:49:55 IST" duration-ms="334379" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.clear()" because "element" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.clear()" because "element" is null
at org.testng.Assert.fail(Assert.java:99)
at utils.WebBasePage.enter(WebBasePage.java:64)
at pageobjects.UserLoginPage.enterUserName(UserLoginPage.java:77)
at pageobjects.UserLoginPage.forcefulLogOutLogin(UserLoginPage.java:123)
at action.LoginAction.logoutLogin(LoginAction.java:26)
at testcases.TicketingDashboardTest.verifyThisMonthByChannel(TicketingDashboardTest.java:460)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyThisMonthByChannel -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:49:55 IST" name="reportWrapUp" finished-at="2022-12-08T11:49:57 IST" duration-ms="1462" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyThisMonthByChannel status=FAILURE method=TicketingDashboardTest.verifyThisMonthByChannel()[pri:21, instance:testcases.TicketingDashboardTest@6356695f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyThisMonthByChannel()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="verifyLastMonthByChannel()[pri:22, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:49:57 IST" name="verifyLastMonthByChannel" finished-at="2022-12-08T11:52:17 IST" duration-ms="140155" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLastMonthByChannel -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:49:57 IST" name="beforeMethod" finished-at="2022-12-08T11:49:57 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyLastMonthByChannel()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:52:17 IST" name="reportWrapUp" finished-at="2022-12-08T11:52:17 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLastMonthByChannel status=SUCCESS method=TicketingDashboardTest.verifyLastMonthByChannel()[pri:22, instance:testcases.TicketingDashboardTest@6356695f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyLastMonthByChannel()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:52:17 IST" name="beforeMethod" finished-at="2022-12-08T11:52:17 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyTodaysFilterByProduct()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTodaysFilterByProduct()[pri:23, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:52:17 IST" name="verifyTodaysFilterByProduct" finished-at="2022-12-08T11:59:19 IST" duration-ms="421803" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTodaysFilterByProduct -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:59:19 IST" name="reportWrapUp" finished-at="2022-12-08T11:59:19 IST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTodaysFilterByProduct status=SUCCESS method=TicketingDashboardTest.verifyTodaysFilterByProduct()[pri:23, instance:testcases.TicketingDashboardTest@6356695f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyTodaysFilterByProduct()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="verifyThisWeekFilterByProduct()[pri:24, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:59:19 IST" name="verifyThisWeekFilterByProduct" finished-at="2022-12-08T12:02:45 IST" duration-ms="205738" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyThisWeekFilterByProduct -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T11:59:19 IST" name="beforeMethod" finished-at="2022-12-08T11:59:19 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyThisWeekFilterByProduct()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T12:02:45 IST" name="reportWrapUp" finished-at="2022-12-08T12:02:45 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyThisWeekFilterByProduct status=SUCCESS method=TicketingDashboardTest.verifyThisWeekFilterByProduct()[pri:24, instance:testcases.TicketingDashboardTest@6356695f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyThisWeekFilterByProduct()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T12:02:45 IST" name="beforeMethod" finished-at="2022-12-08T12:02:45 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyThisYearFilterByProduct()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyThisYearFilterByProduct()[pri:25, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T12:02:45 IST" name="verifyThisYearFilterByProduct" finished-at="2022-12-08T12:08:44 IST" duration-ms="359219" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyThisYearFilterByProduct -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T12:08:44 IST" name="reportWrapUp" finished-at="2022-12-08T12:08:44 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyThisYearFilterByProduct status=SUCCESS method=TicketingDashboardTest.verifyThisYearFilterByProduct()[pri:25, instance:testcases.TicketingDashboardTest@6356695f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyThisYearFilterByProduct()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T12:08:44 IST" name="beforeMethod" finished-at="2022-12-08T12:08:44 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyThisMonthFilterByProduct()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyThisMonthFilterByProduct()[pri:26, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T12:08:44 IST" name="verifyThisMonthFilterByProduct" finished-at="2022-12-08T12:15:03 IST" duration-ms="379170" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyThisMonthFilterByProduct -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T12:15:03 IST" name="reportWrapUp" finished-at="2022-12-08T12:15:03 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyThisMonthFilterByProduct status=SUCCESS method=TicketingDashboardTest.verifyThisMonthFilterByProduct()[pri:26, instance:testcases.TicketingDashboardTest@6356695f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyThisMonthFilterByProduct()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T12:15:03 IST" name="beforeMethod" finished-at="2022-12-08T12:15:03 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyYesterdayFilterByProduct()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyYesterdayFilterByProduct()[pri:27, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T12:15:03 IST" name="verifyYesterdayFilterByProduct" finished-at="2022-12-08T12:17:45 IST" duration-ms="162499" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyYesterdayFilterByProduct -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T12:17:45 IST" name="reportWrapUp" finished-at="2022-12-08T12:17:45 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyYesterdayFilterByProduct status=SUCCESS method=TicketingDashboardTest.verifyYesterdayFilterByProduct()[pri:27, instance:testcases.TicketingDashboardTest@6356695f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyYesterdayFilterByProduct()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="verifyLastWeekFilterByProduct()[pri:28, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T12:17:45 IST" name="verifyLastWeekFilterByProduct" finished-at="2022-12-08T12:23:45 IST" duration-ms="359691" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLastWeekFilterByProduct -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T12:17:45 IST" name="beforeMethod" finished-at="2022-12-08T12:17:45 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyLastWeekFilterByProduct()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T12:23:45 IST" name="beforeMethod" finished-at="2022-12-08T12:23:45 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyLastMonthFilterByProduct()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T12:23:45 IST" name="reportWrapUp" finished-at="2022-12-08T12:23:45 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLastWeekFilterByProduct status=SUCCESS method=TicketingDashboardTest.verifyLastWeekFilterByProduct()[pri:28, instance:testcases.TicketingDashboardTest@6356695f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyLastWeekFilterByProduct()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="verifyLastMonthFilterByProduct()[pri:29, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T12:23:45 IST" name="verifyLastMonthFilterByProduct" finished-at="2022-12-08T12:28:58 IST" duration-ms="313075" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLastMonthFilterByProduct -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T12:28:58 IST" name="reportWrapUp" finished-at="2022-12-08T12:28:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLastMonthFilterByProduct status=SUCCESS method=TicketingDashboardTest.verifyLastMonthFilterByProduct()[pri:29, instance:testcases.TicketingDashboardTest@6356695f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyLastMonthFilterByProduct()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T12:28:58 IST" name="beforeMethod" finished-at="2022-12-08T12:28:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyTodayFilterByResolver()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTodayFilterByResolver()[pri:30, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T12:28:58 IST" name="verifyTodayFilterByResolver" finished-at="2022-12-08T12:33:05 IST" duration-ms="246906" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTodayFilterByResolver -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T12:33:05 IST" name="reportWrapUp" finished-at="2022-12-08T12:33:05 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTodayFilterByResolver status=SUCCESS method=TicketingDashboardTest.verifyTodayFilterByResolver()[pri:30, instance:testcases.TicketingDashboardTest@6356695f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyTodayFilterByResolver()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T12:33:05 IST" name="beforeMethod" finished-at="2022-12-08T12:33:05 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyThisWeekFilterByResolver()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyThisWeekFilterByResolver()[pri:31, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T12:33:05 IST" name="verifyThisWeekFilterByResolver" finished-at="2022-12-08T12:41:04 IST" duration-ms="479140" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyThisWeekFilterByResolver -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingDashboardTest@6356695f]" started-at="2022-12-08T12:41:04 IST" name="reportWrapUp" finished-at="2022-12-08T12:41:04 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyThisWeekFilterByResolver status=SUCCESS method=TicketingDashboardTest.verifyThisWeekFilterByResolver()[pri:31, instance:testcases.TicketingDashboardTest@6356695f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingDashboardTest.verifyThisWeekFilterByResolver()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
      </class> <!-- testcases.TicketingDashboardTest -->
      <class name="testcases.TicketGroupListingTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.TicketGroupListingTest@5ffead27]" started-at="2022-12-08T10:49:49 IST" name="setUp" finished-at="2022-12-08T10:50:06 IST" duration-ms="17399" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketGroupListingTest@5ffead27]" started-at="2022-12-08T10:50:06 IST" name="beforeMethod" finished-at="2022-12-08T10:50:06 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketGroupListingTest.verifySearchFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifySearchFunctionality()[pri:0, instance:testcases.TicketGroupListingTest@5ffead27]" started-at="2022-12-08T10:50:06 IST" name="verifySearchFunctionality" finished-at="2022-12-08T10:50:56 IST" duration-ms="49547" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchFunctionality -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketGroupListingTest@5ffead27]" started-at="2022-12-08T10:50:56 IST" name="reportWrapUp" finished-at="2022-12-08T10:50:56 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySearchFunctionality status=SUCCESS method=TicketGroupListingTest.verifySearchFunctionality()[pri:0, instance:testcases.TicketGroupListingTest@5ffead27] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketGroupListingTest.verifySearchFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="verifyResetFunctionality()[pri:1, instance:testcases.TicketGroupListingTest@5ffead27]" started-at="2022-12-08T10:50:56 IST" name="verifyResetFunctionality" finished-at="2022-12-08T10:52:00 IST" duration-ms="64415" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyResetFunctionality -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketGroupListingTest@5ffead27]" started-at="2022-12-08T10:50:56 IST" name="beforeMethod" finished-at="2022-12-08T10:50:56 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketGroupListingTest.verifyResetFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketGroupListingTest@5ffead27]" started-at="2022-12-08T10:52:00 IST" name="reportWrapUp" finished-at="2022-12-08T10:52:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyResetFunctionality status=SUCCESS method=TicketGroupListingTest.verifyResetFunctionality()[pri:1, instance:testcases.TicketGroupListingTest@5ffead27] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketGroupListingTest.verifyResetFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
      </class> <!-- testcases.TicketGroupListingTest -->
      <class name="testcases.TicketingGroupTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.TicketingGroupTest@4f18837a]" started-at="2022-12-08T12:41:04 IST" name="setUp" finished-at="2022-12-08T12:41:16 IST" duration-ms="11956" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingGroupTest@4f18837a]" started-at="2022-12-08T12:41:16 IST" name="beforeMethod" finished-at="2022-12-08T12:41:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingGroupTest.verifyAddGroup()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyAddGroup()[pri:0, instance:testcases.TicketingGroupTest@4f18837a]" started-at="2022-12-08T12:41:16 IST" name="verifyAddGroup" finished-at="2022-12-08T12:41:55 IST" duration-ms="38593" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAddGroup -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingGroupTest@4f18837a]" started-at="2022-12-08T12:41:55 IST" name="reportWrapUp" finished-at="2022-12-08T12:41:55 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAddGroup status=SUCCESS method=TicketingGroupTest.verifyAddGroup()[pri:0, instance:testcases.TicketingGroupTest@4f18837a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingGroupTest.verifyAddGroup()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingGroupTest@4f18837a]" started-at="2022-12-08T12:41:55 IST" name="beforeMethod" finished-at="2022-12-08T12:41:55 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingGroupTest.verifyCancelButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyCancelButton()[pri:1, instance:testcases.TicketingGroupTest@4f18837a]" started-at="2022-12-08T12:41:55 IST" name="verifyCancelButton" finished-at="2022-12-08T12:42:46 IST" duration-ms="51035" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCancelButton -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingGroupTest@4f18837a]" started-at="2022-12-08T12:42:46 IST" name="reportWrapUp" finished-at="2022-12-08T12:42:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCancelButton status=SUCCESS method=TicketingGroupTest.verifyCancelButton()[pri:1, instance:testcases.TicketingGroupTest@4f18837a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingGroupTest.verifyCancelButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingGroupTest@4f18837a]" started-at="2022-12-08T12:42:46 IST" name="beforeMethod" finished-at="2022-12-08T12:42:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingGroupTest.verifyNoRecordsMessage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyNoRecordsMessage()[pri:2, instance:testcases.TicketingGroupTest@4f18837a]" started-at="2022-12-08T12:42:46 IST" name="verifyNoRecordsMessage" finished-at="2022-12-08T12:43:28 IST" duration-ms="42359" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyNoRecordsMessage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingGroupTest@4f18837a]" started-at="2022-12-08T12:43:28 IST" name="reportWrapUp" finished-at="2022-12-08T12:43:28 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyNoRecordsMessage status=SUCCESS method=TicketingGroupTest.verifyNoRecordsMessage()[pri:2, instance:testcases.TicketingGroupTest@4f18837a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingGroupTest.verifyNoRecordsMessage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
      </class> <!-- testcases.TicketingGroupTest -->
      <class name="testcases.UnassignedTicketsTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.UnassignedTicketsTest@4466af20]" started-at="2022-12-08T13:39:16 IST" name="setUp" finished-at="2022-12-08T13:39:28 IST" duration-ms="12176" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyUnassignedTicketsCount()[pri:1, instance:testcases.UnassignedTicketsTest@4466af20]" started-at="2022-12-08T13:39:28 IST" name="verifyUnassignedTicketsCount" finished-at="2022-12-08T13:40:32 IST" duration-ms="63571" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnassignedTicketsCount -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.UnassignedTicketsTest@4466af20]" started-at="2022-12-08T13:39:28 IST" name="beforeMethod" finished-at="2022-12-08T13:39:28 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.UnassignedTicketsTest.verifyUnassignedTicketsCount()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.UnassignedTicketsTest@4466af20]" started-at="2022-12-08T13:40:32 IST" name="reportWrapUp" finished-at="2022-12-08T13:40:32 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUnassignedTicketsCount status=SUCCESS method=UnassignedTicketsTest.verifyUnassignedTicketsCount()[pri:1, instance:testcases.UnassignedTicketsTest@4466af20] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.UnassignedTicketsTest.verifyUnassignedTicketsCount()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
      </class> <!-- testcases.UnassignedTicketsTest -->
      <class name="testcases.TicketSummaryReportTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.TicketSummaryReportTest@4f6ee6e4]" started-at="2022-12-08T13:33:21 IST" name="setUp" finished-at="2022-12-08T13:34:33 IST" duration-ms="71953" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketSummaryReportTest@4f6ee6e4]" started-at="2022-12-08T13:34:33 IST" name="beforeMethod" finished-at="2022-12-08T13:34:33 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketSummaryReportTest.verifySearchTicket()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifySearchTicket()[pri:0, instance:testcases.TicketSummaryReportTest@4f6ee6e4]" started-at="2022-12-08T13:34:33 IST" name="verifySearchTicket" finished-at="2022-12-08T13:39:16 IST" duration-ms="283278" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//table/tbody/tr[4]/td/div"}
  (Session info: chrome=108.0.5359.96)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.96, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59017}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 7f2bad0701d8481433cb94c4db995d6e
*** Element info: {Using=xpath, value=//table/tbody/tr[4]/td/div}]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//table/tbody/tr[4]/td/div"}
  (Session info: chrome=108.0.5359.96)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.96, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59017}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 7f2bad0701d8481433cb94c4db995d6e
*** Element info: {Using=xpath, value=//table/tbody/tr[4]/td/div}
at org.testng.Assert.fail(Assert.java:99)
at utils.WebBasePage.gettextByJSexecuter(WebBasePage.java:320)
at pageobjects.TicketSummaryReportPage.ticketNoTextFromSearch(TicketSummaryReportPage.java:87)
at action.TicketSummaryReportAction.validateSearchedValues(TicketSummaryReportAction.java:46)
at testcases.TicketSummaryReportTest.verifySearchTicket(TicketSummaryReportTest.java:37)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchTicket -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketSummaryReportTest@4f6ee6e4]" started-at="2022-12-08T13:39:16 IST" name="reportWrapUp" finished-at="2022-12-08T13:39:16 IST" duration-ms="298" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySearchTicket status=FAILURE method=TicketSummaryReportTest.verifySearchTicket()[pri:0, instance:testcases.TicketSummaryReportTest@4f6ee6e4] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketSummaryReportTest.verifySearchTicket()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
      </class> <!-- testcases.TicketSummaryReportTest -->
      <class name="testcases.AddSLA">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.AddSLA@7fa98a66]" started-at="2022-12-08T10:06:23 IST" name="setUp" finished-at="2022-12-08T10:06:42 IST" duration-ms="19552" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AddSLA@7fa98a66]" started-at="2022-12-08T10:06:42 IST" name="beforeMethod" finished-at="2022-12-08T10:06:44 IST" duration-ms="1456" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AddSLA.addTicketForSLA()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addTicketForSLA()[pri:15, instance:testcases.AddSLA@7fa98a66]" started-at="2022-12-08T10:06:44 IST" name="addTicketForSLA" finished-at="2022-12-08T10:12:15 IST" duration-ms="330893" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Policy checkbox clicked]]>
            </line>
          </reporter-output>
        </test-method> <!-- addTicketForSLA -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AddSLA@7fa98a66]" started-at="2022-12-08T10:12:15 IST" name="reportWrapUp" finished-at="2022-12-08T10:12:15 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addTicketForSLA status=SUCCESS method=AddSLA.addTicketForSLA()[pri:15, instance:testcases.AddSLA@7fa98a66] output=Policy checkbox clicked]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AddSLA.addTicketForSLA()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="close()[pri:0, instance:testcases.AddSLA@7fa98a66]" started-at="2022-12-08T13:40:33 IST" name="close" finished-at="2022-12-08T13:40:35 IST" duration-ms="2049" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
      </class> <!-- testcases.AddSLA -->
      <class name="testcases.TicketListingTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.TicketListingTest@1fa268de]" started-at="2022-12-08T12:47:07 IST" name="setUp" finished-at="2022-12-08T12:47:18 IST" duration-ms="10909" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1fa268de]" started-at="2022-12-08T12:47:18 IST" name="beforeMethod" finished-at="2022-12-08T12:47:18 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyUrlOnClickingBreadCrumb()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUrlOnClickingBreadCrumb()[pri:0, instance:testcases.TicketListingTest@1fa268de]" started-at="2022-12-08T12:47:18 IST" name="verifyUrlOnClickingBreadCrumb" finished-at="2022-12-08T12:48:41 IST" duration-ms="83198" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUrlOnClickingBreadCrumb -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1fa268de]" started-at="2022-12-08T12:48:41 IST" name="reportWrapUp" finished-at="2022-12-08T12:48:41 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUrlOnClickingBreadCrumb status=SUCCESS method=TicketListingTest.verifyUrlOnClickingBreadCrumb()[pri:0, instance:testcases.TicketListingTest@1fa268de] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyUrlOnClickingBreadCrumb()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1fa268de]" started-at="2022-12-08T12:48:41 IST" name="beforeMethod" finished-at="2022-12-08T12:48:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyResetButtonFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyResetButtonFunctionality()[pri:1, instance:testcases.TicketListingTest@1fa268de]" started-at="2022-12-08T12:48:41 IST" name="verifyResetButtonFunctionality" finished-at="2022-12-08T12:55:27 IST" duration-ms="406042" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyResetButtonFunctionality -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1fa268de]" started-at="2022-12-08T12:55:27 IST" name="reportWrapUp" finished-at="2022-12-08T12:55:27 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyResetButtonFunctionality status=SUCCESS method=TicketListingTest.verifyResetButtonFunctionality()[pri:1, instance:testcases.TicketListingTest@1fa268de] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyResetButtonFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1fa268de]" started-at="2022-12-08T12:55:27 IST" name="beforeMethod" finished-at="2022-12-08T12:55:27 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyExpandCollapseFeature()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyExpandCollapseFeature()[pri:2, instance:testcases.TicketListingTest@1fa268de]" started-at="2022-12-08T12:55:27 IST" name="verifyExpandCollapseFeature" finished-at="2022-12-08T12:56:54 IST" duration-ms="87404" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyExpandCollapseFeature -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1fa268de]" started-at="2022-12-08T12:56:54 IST" name="reportWrapUp" finished-at="2022-12-08T12:56:54 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyExpandCollapseFeature status=SUCCESS method=TicketListingTest.verifyExpandCollapseFeature()[pri:2, instance:testcases.TicketListingTest@1fa268de] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyExpandCollapseFeature()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1fa268de]" started-at="2022-12-08T12:56:54 IST" name="beforeMethod" finished-at="2022-12-08T12:56:54 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifySearchFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifySearchFunctionality()[pri:3, instance:testcases.TicketListingTest@1fa268de]" started-at="2022-12-08T12:56:54 IST" name="verifySearchFunctionality" finished-at="2022-12-08T13:02:52 IST" duration-ms="357480" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchFunctionality -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1fa268de]" started-at="2022-12-08T13:02:52 IST" name="reportWrapUp" finished-at="2022-12-08T13:02:52 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySearchFunctionality status=SUCCESS method=TicketListingTest.verifySearchFunctionality()[pri:3, instance:testcases.TicketListingTest@1fa268de] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifySearchFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1fa268de]" started-at="2022-12-08T13:02:52 IST" name="beforeMethod" finished-at="2022-12-08T13:02:52 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyUnassignedTicketWidget()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnassignedTicketWidget()[pri:4, instance:testcases.TicketListingTest@1fa268de]" started-at="2022-12-08T13:02:52 IST" name="verifyUnassignedTicketWidget" finished-at="2022-12-08T13:04:23 IST" duration-ms="91361" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnassignedTicketWidget -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1fa268de]" started-at="2022-12-08T13:04:23 IST" name="reportWrapUp" finished-at="2022-12-08T13:04:23 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUnassignedTicketWidget status=SUCCESS method=TicketListingTest.verifyUnassignedTicketWidget()[pri:4, instance:testcases.TicketListingTest@1fa268de] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyUnassignedTicketWidget()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1fa268de]" started-at="2022-12-08T13:04:23 IST" name="beforeMethod" finished-at="2022-12-08T13:04:23 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyReplyCount()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyReplyCount()[pri:5, instance:testcases.TicketListingTest@1fa268de]" started-at="2022-12-08T13:04:23 IST" name="verifyReplyCount" finished-at="2022-12-08T13:08:43 IST" duration-ms="259832" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyReplyCount -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1fa268de]" started-at="2022-12-08T13:08:43 IST" name="reportWrapUp" finished-at="2022-12-08T13:08:43 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyReplyCount status=SUCCESS method=TicketListingTest.verifyReplyCount()[pri:5, instance:testcases.TicketListingTest@1fa268de] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyReplyCount()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1fa268de]" started-at="2022-12-08T13:08:43 IST" name="beforeMethod" finished-at="2022-12-08T13:08:43 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyFollowUpFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyFollowUpFunctionality()[pri:6, instance:testcases.TicketListingTest@1fa268de]" started-at="2022-12-08T13:08:43 IST" name="verifyFollowUpFunctionality" finished-at="2022-12-08T13:13:26 IST" duration-ms="283041" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFollowUpFunctionality -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1fa268de]" started-at="2022-12-08T13:13:26 IST" name="reportWrapUp" finished-at="2022-12-08T13:13:26 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFollowUpFunctionality status=SUCCESS method=TicketListingTest.verifyFollowUpFunctionality()[pri:6, instance:testcases.TicketListingTest@1fa268de] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyFollowUpFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1fa268de]" started-at="2022-12-08T13:13:26 IST" name="beforeMethod" finished-at="2022-12-08T13:13:26 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyMergeButtonFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyMergeButtonFunctionality()[pri:7, instance:testcases.TicketListingTest@1fa268de]" started-at="2022-12-08T13:13:26 IST" name="verifyMergeButtonFunctionality" finished-at="2022-12-08T13:15:13 IST" duration-ms="106532" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMergeButtonFunctionality -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1fa268de]" started-at="2022-12-08T13:15:13 IST" name="reportWrapUp" finished-at="2022-12-08T13:15:13 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyMergeButtonFunctionality status=SUCCESS method=TicketListingTest.verifyMergeButtonFunctionality()[pri:7, instance:testcases.TicketListingTest@1fa268de] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyMergeButtonFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="verifyUpdateTicketFunctionality()[pri:8, instance:testcases.TicketListingTest@1fa268de]" started-at="2022-12-08T13:15:13 IST" name="verifyUpdateTicketFunctionality" finished-at="2022-12-08T13:19:57 IST" duration-ms="284246" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUpdateTicketFunctionality -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1fa268de]" started-at="2022-12-08T13:15:13 IST" name="beforeMethod" finished-at="2022-12-08T13:15:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyUpdateTicketFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1fa268de]" started-at="2022-12-08T13:19:57 IST" name="reportWrapUp" finished-at="2022-12-08T13:19:57 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUpdateTicketFunctionality status=SUCCESS method=TicketListingTest.verifyUpdateTicketFunctionality()[pri:8, instance:testcases.TicketListingTest@1fa268de] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyUpdateTicketFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1fa268de]" started-at="2022-12-08T13:19:57 IST" name="beforeMethod" finished-at="2022-12-08T13:19:57 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyDeleteTicketFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyDeleteTicketFunctionality()[pri:9, instance:testcases.TicketListingTest@1fa268de]" started-at="2022-12-08T13:19:57 IST" name="verifyDeleteTicketFunctionality" finished-at="2022-12-08T13:26:47 IST" duration-ms="410038" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDeleteTicketFunctionality -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1fa268de]" started-at="2022-12-08T13:26:47 IST" name="reportWrapUp" finished-at="2022-12-08T13:26:47 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDeleteTicketFunctionality status=SUCCESS method=TicketListingTest.verifyDeleteTicketFunctionality()[pri:9, instance:testcases.TicketListingTest@1fa268de] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyDeleteTicketFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1fa268de]" started-at="2022-12-08T13:26:47 IST" name="beforeMethod" finished-at="2022-12-08T13:26:47 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyNotesFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyNotesFunctionality()[pri:10, instance:testcases.TicketListingTest@1fa268de]" started-at="2022-12-08T13:26:47 IST" name="verifyNotesFunctionality" finished-at="2022-12-08T13:28:20 IST" duration-ms="93367" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=108.0.5359.96)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.96, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:58491}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 001ff77af679af95bcbef8c4944b792e]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=108.0.5359.96)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.96, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:58491}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 001ff77af679af95bcbef8c4944b792e
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at utils.WebBasePage.takeScreenshot(WebBasePage.java:249)
at utils.WebBasePage.enter(WebBasePage.java:62)
at pageobjects.UserLoginPage.enterUserName(UserLoginPage.java:77)
at pageobjects.UserLoginPage.forcefulLogOutLogin(UserLoginPage.java:123)
at action.LoginAction.logoutLogin(LoginAction.java:26)
at testcases.TicketListingTest.verifyNotesFunctionality(TicketListingTest.java:201)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyNotesFunctionality -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1fa268de]" started-at="2022-12-08T13:28:20 IST" name="reportWrapUp" finished-at="2022-12-08T13:29:20 IST" duration-ms="60057" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyNotesFunctionality status=FAILURE method=TicketListingTest.verifyNotesFunctionality()[pri:10, instance:testcases.TicketListingTest@1fa268de] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyNotesFunctionality()]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=108.0.5359.96)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.96, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:58491}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 001ff77af679af95bcbef8c4944b792e]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=108.0.5359.96)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.96, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:58491}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 001ff77af679af95bcbef8c4944b792e
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at utils.WebTestBase.reportWrapUp(WebTestBase.java:85)
at jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:660)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1fa268de]" started-at="2022-12-08T13:29:20 IST" name="beforeMethod" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1670486360789" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyAttachmentTabFunctionality()[pri:11, instance:testcases.TicketListingTest@1fa268de]" started-at="2022-12-08T13:29:20 IST" name="verifyAttachmentTabFunctionality" finished-at="2022-12-08T13:29:20 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=108.0.5359.96)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.96, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:58491}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 001ff77af679af95bcbef8c4944b792e]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=108.0.5359.96)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.96, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:58491}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 001ff77af679af95bcbef8c4944b792e
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at utils.WebTestBase.reportWrapUp(WebTestBase.java:85)
at jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:660)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAttachmentTabFunctionality -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1fa268de]" started-at="2022-12-08T13:29:20 IST" name="reportWrapUp" finished-at="2022-12-08T13:30:20 IST" duration-ms="60040" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TicketListingTest.verifyAttachmentTabFunctionality()[pri:11, instance:testcases.TicketListingTest@1fa268de] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyAttachmentTabFunctionality()]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=108.0.5359.96)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.96, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:58491}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 001ff77af679af95bcbef8c4944b792e]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=108.0.5359.96)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.96, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:58491}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 001ff77af679af95bcbef8c4944b792e
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at utils.WebTestBase.reportWrapUp(WebTestBase.java:85)
at jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:546)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1fa268de]" started-at="2022-12-08T13:30:20 IST" name="beforeMethod" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1670486420893" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyWidgetsFunctionality()[pri:12, instance:testcases.TicketListingTest@1fa268de]" started-at="2022-12-08T13:30:20 IST" name="verifyWidgetsFunctionality" finished-at="2022-12-08T13:30:20 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=108.0.5359.96)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.96, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:58491}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 001ff77af679af95bcbef8c4944b792e]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=108.0.5359.96)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.96, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:58491}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 001ff77af679af95bcbef8c4944b792e
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at utils.WebTestBase.reportWrapUp(WebTestBase.java:85)
at jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:546)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyWidgetsFunctionality -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1fa268de]" started-at="2022-12-08T13:30:20 IST" name="reportWrapUp" finished-at="2022-12-08T13:31:20 IST" duration-ms="60045" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TicketListingTest.verifyWidgetsFunctionality()[pri:12, instance:testcases.TicketListingTest@1fa268de] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyWidgetsFunctionality()]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=108.0.5359.96)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.96, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:58491}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 001ff77af679af95bcbef8c4944b792e]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=108.0.5359.96)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.96, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:58491}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 001ff77af679af95bcbef8c4944b792e
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at utils.WebTestBase.reportWrapUp(WebTestBase.java:85)
at jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:546)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1fa268de]" started-at="2022-12-08T13:31:20 IST" name="beforeMethod" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1670486480948" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyCannedReplyFunctionality()[pri:13, instance:testcases.TicketListingTest@1fa268de]" started-at="2022-12-08T13:31:20 IST" name="verifyCannedReplyFunctionality" finished-at="2022-12-08T13:31:20 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=108.0.5359.96)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.96, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:58491}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 001ff77af679af95bcbef8c4944b792e]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=108.0.5359.96)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.96, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:58491}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 001ff77af679af95bcbef8c4944b792e
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at utils.WebTestBase.reportWrapUp(WebTestBase.java:85)
at jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:546)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCannedReplyFunctionality -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1fa268de]" started-at="2022-12-08T13:31:20 IST" name="reportWrapUp" finished-at="2022-12-08T13:32:21 IST" duration-ms="60059" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TicketListingTest.verifyCannedReplyFunctionality()[pri:13, instance:testcases.TicketListingTest@1fa268de] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyCannedReplyFunctionality()]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=108.0.5359.96)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.96, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:58491}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 001ff77af679af95bcbef8c4944b792e]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=108.0.5359.96)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.96, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:58491}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 001ff77af679af95bcbef8c4944b792e
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at utils.WebTestBase.reportWrapUp(WebTestBase.java:85)
at jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:546)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1fa268de]" started-at="2022-12-08T13:32:21 IST" name="beforeMethod" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1670486541019" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyDraftReplyFunctionality()[pri:14, instance:testcases.TicketListingTest@1fa268de]" started-at="2022-12-08T13:32:21 IST" name="verifyDraftReplyFunctionality" finished-at="2022-12-08T13:32:21 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=108.0.5359.96)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.96, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:58491}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 001ff77af679af95bcbef8c4944b792e]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=108.0.5359.96)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.96, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:58491}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 001ff77af679af95bcbef8c4944b792e
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at utils.WebTestBase.reportWrapUp(WebTestBase.java:85)
at jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:546)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDraftReplyFunctionality -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1fa268de]" started-at="2022-12-08T13:32:21 IST" name="reportWrapUp" finished-at="2022-12-08T13:33:21 IST" duration-ms="60049" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TicketListingTest.verifyDraftReplyFunctionality()[pri:14, instance:testcases.TicketListingTest@1fa268de] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyDraftReplyFunctionality()]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=108.0.5359.96)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.96, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:58491}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 001ff77af679af95bcbef8c4944b792e]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=108.0.5359.96)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'COG-WIN-MAC03', ip: '192.168.0.167', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.96, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\aanand\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:58491}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 001ff77af679af95bcbef8c4944b792e
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at utils.WebTestBase.reportWrapUp(WebTestBase.java:85)
at jdk.internal.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:546)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
      </class> <!-- testcases.TicketListingTest -->
      <class name="testcases.AddTicketTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.AddTicketTest@694abbdc]" started-at="2022-12-08T10:12:15 IST" name="setUp" finished-at="2022-12-08T10:12:25 IST" duration-ms="10515" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@694abbdc]" started-at="2022-12-08T10:12:25 IST" name="beforeMethod" finished-at="2022-12-08T10:12:25 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AddTicketTest.verifyAssignToDeptDropDown()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyAssignToDeptDropDown()[pri:0, instance:testcases.AddTicketTest@694abbdc]" started-at="2022-12-08T10:12:25 IST" name="verifyAssignToDeptDropDown" finished-at="2022-12-08T10:13:29 IST" duration-ms="63403" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAssignToDeptDropDown -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@694abbdc]" started-at="2022-12-08T10:13:29 IST" name="reportWrapUp" finished-at="2022-12-08T10:13:29 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAssignToDeptDropDown status=SUCCESS method=AddTicketTest.verifyAssignToDeptDropDown()[pri:0, instance:testcases.AddTicketTest@694abbdc] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AddTicketTest.verifyAssignToDeptDropDown()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@694abbdc]" started-at="2022-12-08T10:13:29 IST" name="beforeMethod" finished-at="2022-12-08T10:13:29 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AddTicketTest.verifyTicketCategoryDropdown()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTicketCategoryDropdown()[pri:1, instance:testcases.AddTicketTest@694abbdc]" started-at="2022-12-08T10:13:29 IST" name="verifyTicketCategoryDropdown" finished-at="2022-12-08T10:14:11 IST" duration-ms="42118" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTicketCategoryDropdown -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@694abbdc]" started-at="2022-12-08T10:14:11 IST" name="reportWrapUp" finished-at="2022-12-08T10:14:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTicketCategoryDropdown status=SUCCESS method=AddTicketTest.verifyTicketCategoryDropdown()[pri:1, instance:testcases.AddTicketTest@694abbdc] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AddTicketTest.verifyTicketCategoryDropdown()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@694abbdc]" started-at="2022-12-08T10:14:11 IST" name="beforeMethod" finished-at="2022-12-08T10:14:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AddTicketTest.verifyPriorityDeptDropDown()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyPriorityDeptDropDown()[pri:2, instance:testcases.AddTicketTest@694abbdc]" started-at="2022-12-08T10:14:11 IST" name="verifyPriorityDeptDropDown" finished-at="2022-12-08T10:14:52 IST" duration-ms="41701" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPriorityDeptDropDown -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@694abbdc]" started-at="2022-12-08T10:14:52 IST" name="reportWrapUp" finished-at="2022-12-08T10:14:52 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPriorityDeptDropDown status=SUCCESS method=AddTicketTest.verifyPriorityDeptDropDown()[pri:2, instance:testcases.AddTicketTest@694abbdc] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AddTicketTest.verifyPriorityDeptDropDown()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@694abbdc]" started-at="2022-12-08T10:14:52 IST" name="beforeMethod" finished-at="2022-12-08T10:14:52 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AddTicketTest.verifyValidations()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyValidations()[pri:3, instance:testcases.AddTicketTest@694abbdc]" started-at="2022-12-08T10:14:52 IST" name="verifyValidations" finished-at="2022-12-08T10:15:32 IST" duration-ms="39806" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyValidations -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@694abbdc]" started-at="2022-12-08T10:15:32 IST" name="reportWrapUp" finished-at="2022-12-08T10:15:32 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyValidations status=SUCCESS method=AddTicketTest.verifyValidations()[pri:3, instance:testcases.AddTicketTest@694abbdc] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AddTicketTest.verifyValidations()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="verifyTicketForRadioButtons()[pri:4, instance:testcases.AddTicketTest@694abbdc]" started-at="2022-12-08T10:15:32 IST" name="verifyTicketForRadioButtons" finished-at="2022-12-08T10:16:08 IST" duration-ms="35926" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTicketForRadioButtons -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@694abbdc]" started-at="2022-12-08T10:15:32 IST" name="beforeMethod" finished-at="2022-12-08T10:15:32 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AddTicketTest.verifyTicketForRadioButtons()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@694abbdc]" started-at="2022-12-08T10:16:08 IST" name="reportWrapUp" finished-at="2022-12-08T10:16:08 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTicketForRadioButtons status=SUCCESS method=AddTicketTest.verifyTicketForRadioButtons()[pri:4, instance:testcases.AddTicketTest@694abbdc] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AddTicketTest.verifyTicketForRadioButtons()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@694abbdc]" started-at="2022-12-08T10:16:08 IST" name="beforeMethod" finished-at="2022-12-08T10:16:08 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AddTicketTest.verifyProductDropDown()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyProductDropDown()[pri:5, instance:testcases.AddTicketTest@694abbdc]" started-at="2022-12-08T10:16:08 IST" name="verifyProductDropDown" finished-at="2022-12-08T10:16:49 IST" duration-ms="41171" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyProductDropDown -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@694abbdc]" started-at="2022-12-08T10:16:49 IST" name="reportWrapUp" finished-at="2022-12-08T10:16:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyProductDropDown status=SUCCESS method=AddTicketTest.verifyProductDropDown()[pri:5, instance:testcases.AddTicketTest@694abbdc] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AddTicketTest.verifyProductDropDown()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="verifyNoValidations()[pri:6, instance:testcases.AddTicketTest@694abbdc]" started-at="2022-12-08T10:16:49 IST" name="verifyNoValidations" finished-at="2022-12-08T10:17:28 IST" duration-ms="38794" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyNoValidations -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@694abbdc]" started-at="2022-12-08T10:16:49 IST" name="beforeMethod" finished-at="2022-12-08T10:16:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AddTicketTest.verifyNoValidations()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@694abbdc]" started-at="2022-12-08T10:17:28 IST" name="reportWrapUp" finished-at="2022-12-08T10:17:28 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyNoValidations status=SUCCESS method=AddTicketTest.verifyNoValidations()[pri:6, instance:testcases.AddTicketTest@694abbdc] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AddTicketTest.verifyNoValidations()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="verifyTwoRadioButtons()[pri:7, instance:testcases.AddTicketTest@694abbdc]" started-at="2022-12-08T10:17:28 IST" name="verifyTwoRadioButtons" finished-at="2022-12-08T10:18:13 IST" duration-ms="45131" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTwoRadioButtons -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@694abbdc]" started-at="2022-12-08T10:17:28 IST" name="beforeMethod" finished-at="2022-12-08T10:17:28 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AddTicketTest.verifyTwoRadioButtons()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@694abbdc]" started-at="2022-12-08T10:18:13 IST" name="reportWrapUp" finished-at="2022-12-08T10:18:13 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTwoRadioButtons status=SUCCESS method=AddTicketTest.verifyTwoRadioButtons()[pri:7, instance:testcases.AddTicketTest@694abbdc] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AddTicketTest.verifyTwoRadioButtons()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@694abbdc]" started-at="2022-12-08T10:18:13 IST" name="beforeMethod" finished-at="2022-12-08T10:18:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AddTicketTest.addOwnTickets()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addOwnTickets()[pri:8, instance:testcases.AddTicketTest@694abbdc]" started-at="2022-12-08T10:18:13 IST" name="addOwnTickets" finished-at="2022-12-08T10:20:36 IST" duration-ms="142947" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addOwnTickets -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@694abbdc]" started-at="2022-12-08T10:20:36 IST" name="reportWrapUp" finished-at="2022-12-08T10:20:36 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addOwnTickets status=SUCCESS method=AddTicketTest.addOwnTickets()[pri:8, instance:testcases.AddTicketTest@694abbdc] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AddTicketTest.addOwnTickets()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@694abbdc]" started-at="2022-12-08T10:20:36 IST" name="beforeMethod" finished-at="2022-12-08T10:20:36 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AddTicketTest.verifyValidationForEmptyUser()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyValidationForEmptyUser()[pri:9, instance:testcases.AddTicketTest@694abbdc]" started-at="2022-12-08T10:20:36 IST" name="verifyValidationForEmptyUser" finished-at="2022-12-08T10:22:24 IST" duration-ms="107994" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyValidationForEmptyUser -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@694abbdc]" started-at="2022-12-08T10:22:24 IST" name="reportWrapUp" finished-at="2022-12-08T10:22:24 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyValidationForEmptyUser status=SUCCESS method=AddTicketTest.verifyValidationForEmptyUser()[pri:9, instance:testcases.AddTicketTest@694abbdc] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AddTicketTest.verifyValidationForEmptyUser()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@694abbdc]" started-at="2022-12-08T10:22:24 IST" name="beforeMethod" finished-at="2022-12-08T10:22:24 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AddTicketTest.verifyValidationOnClientsField()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyValidationOnClientsField()[pri:10, instance:testcases.AddTicketTest@694abbdc]" started-at="2022-12-08T10:22:24 IST" name="verifyValidationOnClientsField" finished-at="2022-12-08T10:23:13 IST" duration-ms="49152" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyValidationOnClientsField -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@694abbdc]" started-at="2022-12-08T10:23:13 IST" name="reportWrapUp" finished-at="2022-12-08T10:23:13 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyValidationOnClientsField status=SUCCESS method=AddTicketTest.verifyValidationOnClientsField()[pri:10, instance:testcases.AddTicketTest@694abbdc] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AddTicketTest.verifyValidationOnClientsField()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@694abbdc]" started-at="2022-12-08T10:23:13 IST" name="beforeMethod" finished-at="2022-12-08T10:23:13 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AddTicketTest.checkAddMoreFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="checkAddMoreFunctionality()[pri:11, instance:testcases.AddTicketTest@694abbdc]" started-at="2022-12-08T10:23:13 IST" name="checkAddMoreFunctionality" finished-at="2022-12-08T10:23:58 IST" duration-ms="44205" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkAddMoreFunctionality -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@694abbdc]" started-at="2022-12-08T10:23:58 IST" name="reportWrapUp" finished-at="2022-12-08T10:23:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAddMoreFunctionality status=SUCCESS method=AddTicketTest.checkAddMoreFunctionality()[pri:11, instance:testcases.AddTicketTest@694abbdc] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AddTicketTest.checkAddMoreFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="verifyCharctersInDescriptionField()[pri:12, instance:testcases.AddTicketTest@694abbdc]" started-at="2022-12-08T10:23:58 IST" name="verifyCharctersInDescriptionField" finished-at="2022-12-08T10:25:16 IST" duration-ms="78221" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCharctersInDescriptionField -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@694abbdc]" started-at="2022-12-08T10:23:58 IST" name="beforeMethod" finished-at="2022-12-08T10:23:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AddTicketTest.verifyCharctersInDescriptionField()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@694abbdc]" started-at="2022-12-08T10:25:16 IST" name="reportWrapUp" finished-at="2022-12-08T10:25:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCharctersInDescriptionField status=SUCCESS method=AddTicketTest.verifyCharctersInDescriptionField()[pri:12, instance:testcases.AddTicketTest@694abbdc] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AddTicketTest.verifyCharctersInDescriptionField()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@694abbdc]" started-at="2022-12-08T10:25:16 IST" name="beforeMethod" finished-at="2022-12-08T10:25:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AddTicketTest.verifyFontOfUserGuide()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyFontOfUserGuide()[pri:13, instance:testcases.AddTicketTest@694abbdc]" started-at="2022-12-08T10:25:16 IST" name="verifyFontOfUserGuide" finished-at="2022-12-08T10:25:54 IST" duration-ms="37804" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFontOfUserGuide -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@694abbdc]" started-at="2022-12-08T10:25:54 IST" name="reportWrapUp" finished-at="2022-12-08T10:25:54 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFontOfUserGuide status=SUCCESS method=AddTicketTest.verifyFontOfUserGuide()[pri:13, instance:testcases.AddTicketTest@694abbdc] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AddTicketTest.verifyFontOfUserGuide()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@694abbdc]" started-at="2022-12-08T10:25:54 IST" name="beforeMethod" finished-at="2022-12-08T10:25:54 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AddTicketTest.addTicket()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addTicket()[pri:14, instance:testcases.AddTicketTest@694abbdc]" started-at="2022-12-08T10:25:54 IST" name="addTicket" finished-at="2022-12-08T10:28:35 IST" duration-ms="161337" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addTicket -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@694abbdc]" started-at="2022-12-08T10:28:35 IST" name="reportWrapUp" finished-at="2022-12-08T10:28:35 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addTicket status=SUCCESS method=AddTicketTest.addTicket()[pri:14, instance:testcases.AddTicketTest@694abbdc] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AddTicketTest.addTicket()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
      </class> <!-- testcases.AddTicketTest -->
      <class name="testcases.SLATest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.SLATest@2e005c4b]" started-at="2022-12-08T10:28:35 IST" name="setUp" finished-at="2022-12-08T10:28:45 IST" duration-ms="10092" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@2e005c4b]" started-at="2022-12-08T10:28:45 IST" name="beforeMethod" finished-at="2022-12-08T10:28:45 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.SLATest.verifyAddSLA()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyAddSLA()[pri:0, instance:testcases.SLATest@2e005c4b]" started-at="2022-12-08T10:28:45 IST" name="verifyAddSLA" finished-at="2022-12-08T10:31:56 IST" duration-ms="191354" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.clear()" because "element" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.clear()" because "element" is null
at org.testng.Assert.fail(Assert.java:99)
at utils.WebBasePage.enter(WebBasePage.java:64)
at pageobjects.SLAPage.searchPolicyName(SLAPage.java:35)
at action.SLAAction.searchPolicy(SLAAction.java:25)
at testcases.SLATest.verifyAddSLA(SLATest.java:33)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Policy checkbox clicked]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyAddSLA -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@2e005c4b]" started-at="2022-12-08T10:31:56 IST" name="reportWrapUp" finished-at="2022-12-08T10:31:57 IST" duration-ms="286" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAddSLA status=FAILURE method=SLATest.verifyAddSLA()[pri:0, instance:testcases.SLATest@2e005c4b] output=Policy checkbox clicked]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.SLATest.verifyAddSLA()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="verifyMandatoryValidation()[pri:1, instance:testcases.SLATest@2e005c4b]" started-at="2022-12-08T10:31:57 IST" name="verifyMandatoryValidation" finished-at="2022-12-08T10:33:33 IST" duration-ms="96464" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Policy checkbox clicked]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyMandatoryValidation -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@2e005c4b]" started-at="2022-12-08T10:31:57 IST" name="beforeMethod" finished-at="2022-12-08T10:31:57 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.SLATest.verifyMandatoryValidation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@2e005c4b]" started-at="2022-12-08T10:33:33 IST" name="reportWrapUp" finished-at="2022-12-08T10:33:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyMandatoryValidation status=SUCCESS method=SLATest.verifyMandatoryValidation()[pri:1, instance:testcases.SLATest@2e005c4b] output=Policy checkbox clicked]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.SLATest.verifyMandatoryValidation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="VerifyCharactersValidation()[pri:2, instance:testcases.SLATest@2e005c4b]" started-at="2022-12-08T10:33:33 IST" name="VerifyCharactersValidation" finished-at="2022-12-08T10:35:08 IST" duration-ms="94475" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Policy checkbox clicked]]>
            </line>
          </reporter-output>
        </test-method> <!-- VerifyCharactersValidation -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@2e005c4b]" started-at="2022-12-08T10:33:33 IST" name="beforeMethod" finished-at="2022-12-08T10:33:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.SLATest.VerifyCharactersValidation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@2e005c4b]" started-at="2022-12-08T10:35:08 IST" name="reportWrapUp" finished-at="2022-12-08T10:35:08 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyCharactersValidation status=SUCCESS method=SLATest.VerifyCharactersValidation()[pri:2, instance:testcases.SLATest@2e005c4b] output=Policy checkbox clicked]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.SLATest.VerifyCharactersValidation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="verifyRadioButtonsFunctionality()[pri:3, instance:testcases.SLATest@2e005c4b]" started-at="2022-12-08T10:35:08 IST" name="verifyRadioButtonsFunctionality" finished-at="2022-12-08T10:35:50 IST" duration-ms="42084" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRadioButtonsFunctionality -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@2e005c4b]" started-at="2022-12-08T10:35:08 IST" name="beforeMethod" finished-at="2022-12-08T10:35:08 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.SLATest.verifyRadioButtonsFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@2e005c4b]" started-at="2022-12-08T10:35:50 IST" name="reportWrapUp" finished-at="2022-12-08T10:35:50 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRadioButtonsFunctionality status=SUCCESS method=SLATest.verifyRadioButtonsFunctionality()[pri:3, instance:testcases.SLATest@2e005c4b] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.SLATest.verifyRadioButtonsFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@2e005c4b]" started-at="2022-12-08T10:35:50 IST" name="beforeMethod" finished-at="2022-12-08T10:35:50 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.SLATest.verifyClientCategoryFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyClientCategoryFunctionality()[pri:4, instance:testcases.SLATest@2e005c4b]" started-at="2022-12-08T10:35:50 IST" name="verifyClientCategoryFunctionality" finished-at="2022-12-08T10:36:39 IST" duration-ms="49352" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Policy checkbox clicked]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyClientCategoryFunctionality -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@2e005c4b]" started-at="2022-12-08T10:36:39 IST" name="reportWrapUp" finished-at="2022-12-08T10:36:39 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyClientCategoryFunctionality status=SUCCESS method=SLATest.verifyClientCategoryFunctionality()[pri:4, instance:testcases.SLATest@2e005c4b] output=Policy checkbox clicked]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.SLATest.verifyClientCategoryFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@2e005c4b]" started-at="2022-12-08T10:36:39 IST" name="beforeMethod" finished-at="2022-12-08T10:36:39 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.SLATest.verifyDepartmentCategoryFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyDepartmentCategoryFunctionality()[pri:5, instance:testcases.SLATest@2e005c4b]" started-at="2022-12-08T10:36:39 IST" name="verifyDepartmentCategoryFunctionality" finished-at="2022-12-08T10:37:44 IST" duration-ms="64635" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Policy checkbox clicked]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDepartmentCategoryFunctionality -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@2e005c4b]" started-at="2022-12-08T10:37:44 IST" name="reportWrapUp" finished-at="2022-12-08T10:37:44 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDepartmentCategoryFunctionality status=SUCCESS method=SLATest.verifyDepartmentCategoryFunctionality()[pri:5, instance:testcases.SLATest@2e005c4b] output=Policy checkbox clicked]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.SLATest.verifyDepartmentCategoryFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@2e005c4b]" started-at="2022-12-08T10:37:44 IST" name="beforeMethod" finished-at="2022-12-08T10:37:44 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.SLATest.verifyProductCategoryFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyProductCategoryFunctionality()[pri:6, instance:testcases.SLATest@2e005c4b]" started-at="2022-12-08T10:37:44 IST" name="verifyProductCategoryFunctionality" finished-at="2022-12-08T10:38:32 IST" duration-ms="48484" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Policy checkbox clicked]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyProductCategoryFunctionality -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@2e005c4b]" started-at="2022-12-08T10:38:32 IST" name="reportWrapUp" finished-at="2022-12-08T10:38:32 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyProductCategoryFunctionality status=SUCCESS method=SLATest.verifyProductCategoryFunctionality()[pri:6, instance:testcases.SLATest@2e005c4b] output=Policy checkbox clicked]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.SLATest.verifyProductCategoryFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="verifyDeleteButtonFunctionality()[pri:7, instance:testcases.SLATest@2e005c4b]" started-at="2022-12-08T10:38:32 IST" name="verifyDeleteButtonFunctionality" finished-at="2022-12-08T10:39:33 IST" duration-ms="61255" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Policy checkbox clicked]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDeleteButtonFunctionality -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@2e005c4b]" started-at="2022-12-08T10:38:32 IST" name="beforeMethod" finished-at="2022-12-08T10:38:32 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.SLATest.verifyDeleteButtonFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@2e005c4b]" started-at="2022-12-08T10:39:33 IST" name="reportWrapUp" finished-at="2022-12-08T10:39:33 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDeleteButtonFunctionality status=SUCCESS method=SLATest.verifyDeleteButtonFunctionality()[pri:7, instance:testcases.SLATest@2e005c4b] output=Policy checkbox clicked]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.SLATest.verifyDeleteButtonFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@2e005c4b]" started-at="2022-12-08T10:39:33 IST" name="beforeMethod" finished-at="2022-12-08T10:39:33 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.SLATest.verifyPolicyDatePickerFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyPolicyDatePickerFunctionality()[pri:8, instance:testcases.SLATest@2e005c4b]" started-at="2022-12-08T10:39:33 IST" name="verifyPolicyDatePickerFunctionality" finished-at="2022-12-08T10:40:15 IST" duration-ms="41204" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPolicyDatePickerFunctionality -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@2e005c4b]" started-at="2022-12-08T10:40:15 IST" name="reportWrapUp" finished-at="2022-12-08T10:40:15 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPolicyDatePickerFunctionality status=SUCCESS method=SLATest.verifyPolicyDatePickerFunctionality()[pri:8, instance:testcases.SLATest@2e005c4b] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.SLATest.verifyPolicyDatePickerFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@2e005c4b]" started-at="2022-12-08T10:40:15 IST" name="beforeMethod" finished-at="2022-12-08T10:40:15 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.SLATest.verifyBooleanFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyBooleanFunctionality()[pri:9, instance:testcases.SLATest@2e005c4b]" started-at="2022-12-08T10:40:15 IST" name="verifyBooleanFunctionality" finished-at="2022-12-08T10:41:18 IST" duration-ms="63864" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Policy checkbox clicked]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyBooleanFunctionality -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@2e005c4b]" started-at="2022-12-08T10:41:18 IST" name="reportWrapUp" finished-at="2022-12-08T10:41:18 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyBooleanFunctionality status=SUCCESS method=SLATest.verifyBooleanFunctionality()[pri:9, instance:testcases.SLATest@2e005c4b] output=Policy checkbox clicked]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.SLATest.verifyBooleanFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="verifyBooleanSaveButtonFunctionality()[pri:10, instance:testcases.SLATest@2e005c4b]" started-at="2022-12-08T10:41:18 IST" name="verifyBooleanSaveButtonFunctionality" finished-at="2022-12-08T10:42:22 IST" duration-ms="63650" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Policy checkbox clicked]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyBooleanSaveButtonFunctionality -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@2e005c4b]" started-at="2022-12-08T10:41:18 IST" name="beforeMethod" finished-at="2022-12-08T10:41:18 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.SLATest.verifyBooleanSaveButtonFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@2e005c4b]" started-at="2022-12-08T10:42:22 IST" name="reportWrapUp" finished-at="2022-12-08T10:42:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyBooleanSaveButtonFunctionality status=SUCCESS method=SLATest.verifyBooleanSaveButtonFunctionality()[pri:10, instance:testcases.SLATest@2e005c4b] output=Policy checkbox clicked]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.SLATest.verifyBooleanSaveButtonFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="verifyResponseTimeValidations()[pri:11, instance:testcases.SLATest@2e005c4b]" started-at="2022-12-08T10:42:22 IST" name="verifyResponseTimeValidations" finished-at="2022-12-08T10:43:55 IST" duration-ms="92674" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Policy checkbox clicked]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyResponseTimeValidations -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@2e005c4b]" started-at="2022-12-08T10:42:22 IST" name="beforeMethod" finished-at="2022-12-08T10:42:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.SLATest.verifyResponseTimeValidations()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@2e005c4b]" started-at="2022-12-08T10:43:55 IST" name="reportWrapUp" finished-at="2022-12-08T10:43:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyResponseTimeValidations status=SUCCESS method=SLATest.verifyResponseTimeValidations()[pri:11, instance:testcases.SLATest@2e005c4b] output=Policy checkbox clicked]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.SLATest.verifyResponseTimeValidations()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="verifyResolveTimeValidations()[pri:12, instance:testcases.SLATest@2e005c4b]" started-at="2022-12-08T10:43:55 IST" name="verifyResolveTimeValidations" finished-at="2022-12-08T10:45:28 IST" duration-ms="93052" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Policy checkbox clicked]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyResolveTimeValidations -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@2e005c4b]" started-at="2022-12-08T10:43:55 IST" name="beforeMethod" finished-at="2022-12-08T10:43:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.SLATest.verifyResolveTimeValidations()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@2e005c4b]" started-at="2022-12-08T10:45:28 IST" name="reportWrapUp" finished-at="2022-12-08T10:45:28 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyResolveTimeValidations status=SUCCESS method=SLATest.verifyResolveTimeValidations()[pri:12, instance:testcases.SLATest@2e005c4b] output=Policy checkbox clicked]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.SLATest.verifyResolveTimeValidations()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
      </class> <!-- testcases.SLATest -->
      <class name="testcases.TicketingServiceBoardTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.TicketingServiceBoardTest@359f7cdf]" started-at="2022-12-08T12:43:28 IST" name="setUp" finished-at="2022-12-08T12:43:38 IST" duration-ms="9705" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyServiceboardElements()[pri:0, instance:testcases.TicketingServiceBoardTest@359f7cdf]" started-at="2022-12-08T12:43:38 IST" name="verifyServiceboardElements" finished-at="2022-12-08T12:44:08 IST" duration-ms="29805" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyServiceboardElements -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingServiceBoardTest@359f7cdf]" started-at="2022-12-08T12:43:38 IST" name="beforeMethod" finished-at="2022-12-08T12:43:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingServiceBoardTest.verifyServiceboardElements()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingServiceBoardTest@359f7cdf]" started-at="2022-12-08T12:44:08 IST" name="reportWrapUp" finished-at="2022-12-08T12:44:08 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyServiceboardElements status=SUCCESS method=TicketingServiceBoardTest.verifyServiceboardElements()[pri:0, instance:testcases.TicketingServiceBoardTest@359f7cdf] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingServiceBoardTest.verifyServiceboardElements()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingServiceBoardTest@359f7cdf]" started-at="2022-12-08T12:44:08 IST" name="beforeMethod" finished-at="2022-12-08T12:44:08 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingServiceBoardTest.verifyAddServiceBoardGroupOne()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyAddServiceBoardGroupOne()[pri:1, instance:testcases.TicketingServiceBoardTest@359f7cdf]" started-at="2022-12-08T12:44:08 IST" name="verifyAddServiceBoardGroupOne" finished-at="2022-12-08T12:44:58 IST" duration-ms="50337" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAddServiceBoardGroupOne -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingServiceBoardTest@359f7cdf]" started-at="2022-12-08T12:44:58 IST" name="reportWrapUp" finished-at="2022-12-08T12:44:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAddServiceBoardGroupOne status=SUCCESS method=TicketingServiceBoardTest.verifyAddServiceBoardGroupOne()[pri:1, instance:testcases.TicketingServiceBoardTest@359f7cdf] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingServiceBoardTest.verifyAddServiceBoardGroupOne()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingServiceBoardTest@359f7cdf]" started-at="2022-12-08T12:44:58 IST" name="beforeMethod" finished-at="2022-12-08T12:44:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingServiceBoardTest.verifyAddServiceBoardGroupTwo()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyAddServiceBoardGroupTwo()[pri:2, instance:testcases.TicketingServiceBoardTest@359f7cdf]" started-at="2022-12-08T12:44:58 IST" name="verifyAddServiceBoardGroupTwo" finished-at="2022-12-08T12:45:41 IST" duration-ms="43373" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAddServiceBoardGroupTwo -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingServiceBoardTest@359f7cdf]" started-at="2022-12-08T12:45:41 IST" name="reportWrapUp" finished-at="2022-12-08T12:45:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAddServiceBoardGroupTwo status=SUCCESS method=TicketingServiceBoardTest.verifyAddServiceBoardGroupTwo()[pri:2, instance:testcases.TicketingServiceBoardTest@359f7cdf] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingServiceBoardTest.verifyAddServiceBoardGroupTwo()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingServiceBoardTest@359f7cdf]" started-at="2022-12-08T12:45:41 IST" name="beforeMethod" finished-at="2022-12-08T12:45:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingServiceBoardTest.verifyCancelButtonFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyCancelButtonFunctionality()[pri:3, instance:testcases.TicketingServiceBoardTest@359f7cdf]" started-at="2022-12-08T12:45:41 IST" name="verifyCancelButtonFunctionality" finished-at="2022-12-08T12:46:27 IST" duration-ms="45443" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCancelButtonFunctionality -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingServiceBoardTest@359f7cdf]" started-at="2022-12-08T12:46:27 IST" name="reportWrapUp" finished-at="2022-12-08T12:46:27 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCancelButtonFunctionality status=SUCCESS method=TicketingServiceBoardTest.verifyCancelButtonFunctionality()[pri:3, instance:testcases.TicketingServiceBoardTest@359f7cdf] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingServiceBoardTest.verifyCancelButtonFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingServiceBoardTest@359f7cdf]" started-at="2022-12-08T12:46:27 IST" name="beforeMethod" finished-at="2022-12-08T12:46:27 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingServiceBoardTest.verifyUpdateServiceBoardNavigation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUpdateServiceBoardNavigation()[pri:4, instance:testcases.TicketingServiceBoardTest@359f7cdf]" started-at="2022-12-08T12:46:27 IST" name="verifyUpdateServiceBoardNavigation" finished-at="2022-12-08T12:47:07 IST" duration-ms="39837" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUpdateServiceBoardNavigation -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingServiceBoardTest@359f7cdf]" started-at="2022-12-08T12:47:07 IST" name="reportWrapUp" finished-at="2022-12-08T12:47:07 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUpdateServiceBoardNavigation status=SUCCESS method=TicketingServiceBoardTest.verifyUpdateServiceBoardNavigation()[pri:4, instance:testcases.TicketingServiceBoardTest@359f7cdf] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingServiceBoardTest.verifyUpdateServiceBoardNavigation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
      </class> <!-- testcases.TicketingServiceBoardTest -->
      <class name="testcases.TicketDetailReportTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.TicketDetailReportTest@4567f35d]" started-at="2022-12-08T10:45:28 IST" name="setUp" finished-at="2022-12-08T10:45:40 IST" duration-ms="11853" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifySearchTicket()[pri:0, instance:testcases.TicketDetailReportTest@4567f35d]" started-at="2022-12-08T10:45:40 IST" name="verifySearchTicket" finished-at="2022-12-08T10:49:49 IST" duration-ms="248842" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchTicket -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketDetailReportTest@4567f35d]" started-at="2022-12-08T10:45:40 IST" name="beforeMethod" finished-at="2022-12-08T10:45:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketDetailReportTest.verifySearchTicket()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketDetailReportTest@4567f35d]" started-at="2022-12-08T10:49:49 IST" name="reportWrapUp" finished-at="2022-12-08T10:49:49 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySearchTicket status=SUCCESS method=TicketDetailReportTest.verifySearchTicket()[pri:0, instance:testcases.TicketDetailReportTest@4567f35d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketDetailReportTest.verifySearchTicket()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
      </class> <!-- testcases.TicketDetailReportTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
