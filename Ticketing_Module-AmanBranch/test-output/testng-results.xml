<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="10" total="70" passed="52" failed="8" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[Policy checkbox clicked]]>
    </line>
    <line>
      <![CDATA[Policy checkbox clicked]]>
    </line>
    <line>
      <![CDATA[Policy checkbox clicked]]>
    </line>
    <line>
      <![CDATA[Policy checkbox clicked]]>
    </line>
    <line>
      <![CDATA[Policy checkbox clicked]]>
    </line>
    <line>
      <![CDATA[Policy checkbox clicked]]>
    </line>
    <line>
      <![CDATA[Policy checkbox clicked]]>
    </line>
    <line>
      <![CDATA[Policy checkbox clicked]]>
    </line>
    <line>
      <![CDATA[Policy checkbox clicked]]>
    </line>
    <line>
      <![CDATA[Policy checkbox clicked]]>
    </line>
    <line>
      <![CDATA[Policy checkbox clicked]]>
    </line>
  </reporter-output>
  <suite started-at="2023-08-11T22:31:59 IST" name="Suite" finished-at="2023-08-11T23:58:21 IST" duration-ms="5182553">
    <groups>
    </groups>
    <test started-at="2023-08-11T22:31:59 IST" name="Test" finished-at="2023-08-11T23:58:21 IST" duration-ms="5182553">
      <class name="testcases.TicketGroupListingTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.TicketGroupListingTest@52e6fdee]" started-at="2023-08-11T23:21:35 IST" name="setUp" finished-at="2023-08-11T23:21:48 IST" duration-ms="13238" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketGroupListingTest@52e6fdee]" started-at="2023-08-11T23:21:48 IST" name="beforeMethod" finished-at="2023-08-11T23:21:48 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketGroupListingTest.verifySearchFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifySearchFunctionality()[pri:0, instance:testcases.TicketGroupListingTest@52e6fdee]" started-at="2023-08-11T23:21:48 IST" name="verifySearchFunctionality" finished-at="2023-08-11T23:23:05 IST" duration-ms="76829" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchFunctionality -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketGroupListingTest@52e6fdee]" started-at="2023-08-11T23:23:05 IST" name="reportWrapUp" finished-at="2023-08-11T23:23:05 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySearchFunctionality status=SUCCESS method=TicketGroupListingTest.verifySearchFunctionality()[pri:0, instance:testcases.TicketGroupListingTest@52e6fdee] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketGroupListingTest.verifySearchFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketGroupListingTest@52e6fdee]" started-at="2023-08-11T23:23:05 IST" name="beforeMethod" finished-at="2023-08-11T23:23:05 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketGroupListingTest.verifyResetFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyResetFunctionality()[pri:1, instance:testcases.TicketGroupListingTest@52e6fdee]" started-at="2023-08-11T23:23:05 IST" name="verifyResetFunctionality" finished-at="2023-08-11T23:24:14 IST" duration-ms="68748" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyResetFunctionality -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketGroupListingTest@52e6fdee]" started-at="2023-08-11T23:24:14 IST" name="reportWrapUp" finished-at="2023-08-11T23:24:14 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyResetFunctionality status=SUCCESS method=TicketGroupListingTest.verifyResetFunctionality()[pri:1, instance:testcases.TicketGroupListingTest@52e6fdee] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketGroupListingTest.verifyResetFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
      </class> <!-- testcases.TicketGroupListingTest -->
      <class name="testcases.TicketingGroupTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.TicketingGroupTest@6c80d78a]" started-at="2023-08-11T23:24:14 IST" name="setUp" finished-at="2023-08-11T23:24:28 IST" duration-ms="14239" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingGroupTest@6c80d78a]" started-at="2023-08-11T23:24:28 IST" name="beforeMethod" finished-at="2023-08-11T23:24:28 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingGroupTest.verifyAddGroup()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyAddGroup()[pri:0, instance:testcases.TicketingGroupTest@6c80d78a]" started-at="2023-08-11T23:24:28 IST" name="verifyAddGroup" finished-at="2023-08-11T23:25:24 IST" duration-ms="56444" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAddGroup -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingGroupTest@6c80d78a]" started-at="2023-08-11T23:25:24 IST" name="reportWrapUp" finished-at="2023-08-11T23:25:24 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAddGroup status=SUCCESS method=TicketingGroupTest.verifyAddGroup()[pri:0, instance:testcases.TicketingGroupTest@6c80d78a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingGroupTest.verifyAddGroup()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingGroupTest@6c80d78a]" started-at="2023-08-11T23:25:24 IST" name="beforeMethod" finished-at="2023-08-11T23:25:24 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingGroupTest.verifyCancelButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyCancelButton()[pri:1, instance:testcases.TicketingGroupTest@6c80d78a]" started-at="2023-08-11T23:25:24 IST" name="verifyCancelButton" finished-at="2023-08-11T23:26:19 IST" duration-ms="54954" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCancelButton -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingGroupTest@6c80d78a]" started-at="2023-08-11T23:26:19 IST" name="reportWrapUp" finished-at="2023-08-11T23:26:19 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCancelButton status=SUCCESS method=TicketingGroupTest.verifyCancelButton()[pri:1, instance:testcases.TicketingGroupTest@6c80d78a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingGroupTest.verifyCancelButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingGroupTest@6c80d78a]" started-at="2023-08-11T23:26:19 IST" name="beforeMethod" finished-at="2023-08-11T23:26:19 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingGroupTest.verifyNoRecordsMessage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyNoRecordsMessage()[pri:2, instance:testcases.TicketingGroupTest@6c80d78a]" started-at="2023-08-11T23:26:19 IST" name="verifyNoRecordsMessage" finished-at="2023-08-11T23:27:29 IST" duration-ms="69452" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.clear()" because "element" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.clear()" because "element" is null
at org.testng.Assert.fail(Assert.java:99)
at utils.WebBasePage.enter(WebBasePage.java:64)
at pageobjects.UserLoginPage.enterUserName(UserLoginPage.java:77)
at pageobjects.UserLoginPage.forcefulLogOutLogin(UserLoginPage.java:123)
at action.LoginAction.logoutLogin(LoginAction.java:26)
at testcases.TicketingGroupTest.verifyNoRecordsMessage(TicketingGroupTest.java:60)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyNoRecordsMessage -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingGroupTest@6c80d78a]" started-at="2023-08-11T23:27:29 IST" name="reportWrapUp" finished-at="2023-08-11T23:27:30 IST" duration-ms="1302" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyNoRecordsMessage status=FAILURE method=TicketingGroupTest.verifyNoRecordsMessage()[pri:2, instance:testcases.TicketingGroupTest@6c80d78a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingGroupTest.verifyNoRecordsMessage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
      </class> <!-- testcases.TicketingGroupTest -->
      <class name="testcases.UnassignedTicketsTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.UnassignedTicketsTest@15ff3e9e]" started-at="2023-08-11T23:57:18 IST" name="setUp" finished-at="2023-08-11T23:57:47 IST" duration-ms="29271" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.UnassignedTicketsTest@15ff3e9e]" started-at="2023-08-11T23:57:47 IST" name="beforeMethod" finished-at="2023-08-11T23:57:47 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.UnassignedTicketsTest.verifyUnassignedTicketsCount()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnassignedTicketsCount()[pri:1, instance:testcases.UnassignedTicketsTest@15ff3e9e]" started-at="2023-08-11T23:57:47 IST" name="verifyUnassignedTicketsCount" finished-at="2023-08-11T23:58:21 IST" duration-ms="34676" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnassignedTicketsCount -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.UnassignedTicketsTest@15ff3e9e]" started-at="2023-08-11T23:58:21 IST" name="reportWrapUp" finished-at="2023-08-11T23:58:21 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUnassignedTicketsCount status=SUCCESS method=UnassignedTicketsTest.verifyUnassignedTicketsCount()[pri:1, instance:testcases.UnassignedTicketsTest@15ff3e9e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.UnassignedTicketsTest.verifyUnassignedTicketsCount()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
      </class> <!-- testcases.UnassignedTicketsTest -->
      <class name="testcases.TicketSummaryReportTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.TicketSummaryReportTest@7fa98a66]" started-at="2023-08-11T23:53:43 IST" name="setUp" finished-at="2023-08-11T23:53:55 IST" duration-ms="12070" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketSummaryReportTest@7fa98a66]" started-at="2023-08-11T23:53:55 IST" name="beforeMethod" finished-at="2023-08-11T23:53:55 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketSummaryReportTest.verifySearchTicket()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifySearchTicket()[pri:0, instance:testcases.TicketSummaryReportTest@7fa98a66]" started-at="2023-08-11T23:53:55 IST" name="verifySearchTicket" finished-at="2023-08-11T23:57:18 IST" duration-ms="202368" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchTicket -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketSummaryReportTest@7fa98a66]" started-at="2023-08-11T23:57:18 IST" name="reportWrapUp" finished-at="2023-08-11T23:57:18 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySearchTicket status=SUCCESS method=TicketSummaryReportTest.verifySearchTicket()[pri:0, instance:testcases.TicketSummaryReportTest@7fa98a66] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketSummaryReportTest.verifySearchTicket()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
      </class> <!-- testcases.TicketSummaryReportTest -->
      <class name="testcases.AddSLA">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.AddSLA@72057ecf]" started-at="2023-08-11T22:31:59 IST" name="setUp" finished-at="2023-08-11T22:32:13 IST" duration-ms="13956" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AddSLA@72057ecf]" started-at="2023-08-11T22:32:13 IST" name="beforeMethod" finished-at="2023-08-11T22:32:13 IST" duration-ms="242" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AddSLA.addTicketForSLA()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addTicketForSLA()[pri:15, instance:testcases.AddSLA@72057ecf]" started-at="2023-08-11T22:32:13 IST" name="addTicketForSLA" finished-at="2023-08-11T22:37:03 IST" duration-ms="289692" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Policy checkbox clicked]]>
            </line>
          </reporter-output>
        </test-method> <!-- addTicketForSLA -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AddSLA@72057ecf]" started-at="2023-08-11T22:37:03 IST" name="reportWrapUp" finished-at="2023-08-11T22:37:03 IST" duration-ms="12" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addTicketForSLA status=SUCCESS method=AddSLA.addTicketForSLA()[pri:15, instance:testcases.AddSLA@72057ecf] output=Policy checkbox clicked]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AddSLA.addTicketForSLA()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="close()[pri:0, instance:testcases.AddSLA@72057ecf]" started-at="2023-08-11T23:58:22 IST" name="close" finished-at="2023-08-11T23:58:24 IST" duration-ms="2273" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
      </class> <!-- testcases.AddSLA -->
      <class name="testcases.CompanySetupConfiguration">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.CompanySetupConfiguration@4d9e68d0]" started-at="2023-08-11T22:53:17 IST" name="setUp" finished-at="2023-08-11T22:53:29 IST" duration-ms="11844" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetupConfiguration@4d9e68d0]" started-at="2023-08-11T22:53:29 IST" name="beforeMethod" finished-at="2023-08-11T22:53:29 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CompanySetupConfiguration.addNewUser()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addNewUser()[pri:0, instance:testcases.CompanySetupConfiguration@4d9e68d0]" started-at="2023-08-11T22:53:29 IST" name="addNewUser" finished-at="2023-08-11T22:57:50 IST" duration-ms="261497" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNewUser -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetupConfiguration@4d9e68d0]" started-at="2023-08-11T22:57:50 IST" name="reportWrapUp" finished-at="2023-08-11T22:57:50 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addNewUser status=SUCCESS method=CompanySetupConfiguration.addNewUser()[pri:0, instance:testcases.CompanySetupConfiguration@4d9e68d0] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CompanySetupConfiguration.addNewUser()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetupConfiguration@4d9e68d0]" started-at="2023-08-11T22:57:50 IST" name="beforeMethod" finished-at="2023-08-11T22:57:50 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CompanySetupConfiguration.addChannel()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addChannel()[pri:1, instance:testcases.CompanySetupConfiguration@4d9e68d0]" started-at="2023-08-11T22:57:50 IST" name="addChannel" finished-at="2023-08-11T22:59:22 IST" duration-ms="91524" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addChannel -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetupConfiguration@4d9e68d0]" started-at="2023-08-11T22:59:22 IST" name="reportWrapUp" finished-at="2023-08-11T22:59:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addChannel status=SUCCESS method=CompanySetupConfiguration.addChannel()[pri:1, instance:testcases.CompanySetupConfiguration@4d9e68d0] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CompanySetupConfiguration.addChannel()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetupConfiguration@4d9e68d0]" started-at="2023-08-11T22:59:22 IST" name="beforeMethod" finished-at="2023-08-11T22:59:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.CompanySetupConfiguration.addUserAndDepartment()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addUserAndDepartment()[pri:3, instance:testcases.CompanySetupConfiguration@4d9e68d0]" started-at="2023-08-11T22:59:22 IST" name="addUserAndDepartment" finished-at="2023-08-11T23:00:48 IST" duration-ms="85961" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addUserAndDepartment -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.CompanySetupConfiguration@4d9e68d0]" started-at="2023-08-11T23:00:48 IST" name="reportWrapUp" finished-at="2023-08-11T23:00:48 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addUserAndDepartment status=SUCCESS method=CompanySetupConfiguration.addUserAndDepartment()[pri:3, instance:testcases.CompanySetupConfiguration@4d9e68d0] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.CompanySetupConfiguration.addUserAndDepartment()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
      </class> <!-- testcases.CompanySetupConfiguration -->
      <class name="testcases.AddTicketTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.AddTicketTest@1d9b7cce]" started-at="2023-08-11T22:37:03 IST" name="setUp" finished-at="2023-08-11T22:37:15 IST" duration-ms="11875" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@1d9b7cce]" started-at="2023-08-11T22:37:15 IST" name="beforeMethod" finished-at="2023-08-11T22:37:15 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AddTicketTest.verifyAssignToDeptDropDown()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyAssignToDeptDropDown()[pri:0, instance:testcases.AddTicketTest@1d9b7cce]" started-at="2023-08-11T22:37:15 IST" name="verifyAssignToDeptDropDown" finished-at="2023-08-11T22:38:23 IST" duration-ms="67676" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAssignToDeptDropDown -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@1d9b7cce]" started-at="2023-08-11T22:38:23 IST" name="reportWrapUp" finished-at="2023-08-11T22:38:23 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAssignToDeptDropDown status=SUCCESS method=AddTicketTest.verifyAssignToDeptDropDown()[pri:0, instance:testcases.AddTicketTest@1d9b7cce] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AddTicketTest.verifyAssignToDeptDropDown()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@1d9b7cce]" started-at="2023-08-11T22:38:23 IST" name="beforeMethod" finished-at="2023-08-11T22:38:23 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AddTicketTest.verifyTicketCategoryDropdown()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTicketCategoryDropdown()[pri:1, instance:testcases.AddTicketTest@1d9b7cce]" started-at="2023-08-11T22:38:23 IST" name="verifyTicketCategoryDropdown" finished-at="2023-08-11T22:39:26 IST" duration-ms="63539" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTicketCategoryDropdown -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@1d9b7cce]" started-at="2023-08-11T22:39:26 IST" name="reportWrapUp" finished-at="2023-08-11T22:39:26 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTicketCategoryDropdown status=SUCCESS method=AddTicketTest.verifyTicketCategoryDropdown()[pri:1, instance:testcases.AddTicketTest@1d9b7cce] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AddTicketTest.verifyTicketCategoryDropdown()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@1d9b7cce]" started-at="2023-08-11T22:39:26 IST" name="beforeMethod" finished-at="2023-08-11T22:39:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AddTicketTest.verifyPriorityDeptDropDown()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyPriorityDeptDropDown()[pri:2, instance:testcases.AddTicketTest@1d9b7cce]" started-at="2023-08-11T22:39:26 IST" name="verifyPriorityDeptDropDown" finished-at="2023-08-11T22:40:30 IST" duration-ms="63495" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPriorityDeptDropDown -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@1d9b7cce]" started-at="2023-08-11T22:40:30 IST" name="reportWrapUp" finished-at="2023-08-11T22:40:30 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPriorityDeptDropDown status=SUCCESS method=AddTicketTest.verifyPriorityDeptDropDown()[pri:2, instance:testcases.AddTicketTest@1d9b7cce] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AddTicketTest.verifyPriorityDeptDropDown()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@1d9b7cce]" started-at="2023-08-11T22:40:30 IST" name="beforeMethod" finished-at="2023-08-11T22:40:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AddTicketTest.verifyValidations()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyValidations()[pri:3, instance:testcases.AddTicketTest@1d9b7cce]" started-at="2023-08-11T22:40:30 IST" name="verifyValidations" finished-at="2023-08-11T22:41:36 IST" duration-ms="66749" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyValidations -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@1d9b7cce]" started-at="2023-08-11T22:41:36 IST" name="reportWrapUp" finished-at="2023-08-11T22:41:36 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyValidations status=SUCCESS method=AddTicketTest.verifyValidations()[pri:3, instance:testcases.AddTicketTest@1d9b7cce] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AddTicketTest.verifyValidations()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@1d9b7cce]" started-at="2023-08-11T22:41:36 IST" name="beforeMethod" finished-at="2023-08-11T22:41:36 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AddTicketTest.verifyTicketForRadioButtons()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTicketForRadioButtons()[pri:4, instance:testcases.AddTicketTest@1d9b7cce]" started-at="2023-08-11T22:41:36 IST" name="verifyTicketForRadioButtons" finished-at="2023-08-11T22:42:36 IST" duration-ms="59366" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTicketForRadioButtons -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@1d9b7cce]" started-at="2023-08-11T22:42:36 IST" name="reportWrapUp" finished-at="2023-08-11T22:42:36 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTicketForRadioButtons status=SUCCESS method=AddTicketTest.verifyTicketForRadioButtons()[pri:4, instance:testcases.AddTicketTest@1d9b7cce] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AddTicketTest.verifyTicketForRadioButtons()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@1d9b7cce]" started-at="2023-08-11T22:42:36 IST" name="beforeMethod" finished-at="2023-08-11T22:42:36 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AddTicketTest.verifyProductDropDown()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyProductDropDown()[pri:5, instance:testcases.AddTicketTest@1d9b7cce]" started-at="2023-08-11T22:42:36 IST" name="verifyProductDropDown" finished-at="2023-08-11T22:43:37 IST" duration-ms="61279" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyProductDropDown -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@1d9b7cce]" started-at="2023-08-11T22:43:37 IST" name="reportWrapUp" finished-at="2023-08-11T22:43:37 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyProductDropDown status=SUCCESS method=AddTicketTest.verifyProductDropDown()[pri:5, instance:testcases.AddTicketTest@1d9b7cce] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AddTicketTest.verifyProductDropDown()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@1d9b7cce]" started-at="2023-08-11T22:43:37 IST" name="beforeMethod" finished-at="2023-08-11T22:43:37 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AddTicketTest.verifyNoValidations()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyNoValidations()[pri:6, instance:testcases.AddTicketTest@1d9b7cce]" started-at="2023-08-11T22:43:37 IST" name="verifyNoValidations" finished-at="2023-08-11T22:44:34 IST" duration-ms="57516" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyNoValidations -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@1d9b7cce]" started-at="2023-08-11T22:44:35 IST" name="reportWrapUp" finished-at="2023-08-11T22:44:35 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyNoValidations status=SUCCESS method=AddTicketTest.verifyNoValidations()[pri:6, instance:testcases.AddTicketTest@1d9b7cce] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AddTicketTest.verifyNoValidations()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@1d9b7cce]" started-at="2023-08-11T22:44:35 IST" name="beforeMethod" finished-at="2023-08-11T22:44:35 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AddTicketTest.verifyTwoRadioButtons()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTwoRadioButtons()[pri:7, instance:testcases.AddTicketTest@1d9b7cce]" started-at="2023-08-11T22:44:35 IST" name="verifyTwoRadioButtons" finished-at="2023-08-11T22:45:42 IST" duration-ms="67020" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTwoRadioButtons -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@1d9b7cce]" started-at="2023-08-11T22:45:42 IST" name="reportWrapUp" finished-at="2023-08-11T22:45:42 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTwoRadioButtons status=SUCCESS method=AddTicketTest.verifyTwoRadioButtons()[pri:7, instance:testcases.AddTicketTest@1d9b7cce] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AddTicketTest.verifyTwoRadioButtons()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@1d9b7cce]" started-at="2023-08-11T22:45:42 IST" name="beforeMethod" finished-at="2023-08-11T22:45:42 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AddTicketTest.addOwnTickets()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addOwnTickets()[pri:8, instance:testcases.AddTicketTest@1d9b7cce]" started-at="2023-08-11T22:45:42 IST" name="addOwnTickets" finished-at="2023-08-11T22:46:19 IST" duration-ms="37340" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.clear()" because "element" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.clear()" because "element" is null
at org.testng.Assert.fail(Assert.java:99)
at utils.WebBasePage.enter(WebBasePage.java:64)
at pageobjects.UserLoginPage.enterUserName(UserLoginPage.java:77)
at pageobjects.UserLoginPage.forcefulLogOutLogin(UserLoginPage.java:123)
at action.LoginAction.logoutLogin(LoginAction.java:26)
at testcases.AddTicketTest.addOwnTickets(AddTicketTest.java:128)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addOwnTickets -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@1d9b7cce]" started-at="2023-08-11T22:46:19 IST" name="reportWrapUp" finished-at="2023-08-11T22:46:22 IST" duration-ms="2851" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addOwnTickets status=FAILURE method=AddTicketTest.addOwnTickets()[pri:8, instance:testcases.AddTicketTest@1d9b7cce] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AddTicketTest.addOwnTickets()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@1d9b7cce]" started-at="2023-08-11T22:46:22 IST" name="beforeMethod" finished-at="2023-08-11T22:46:22 IST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AddTicketTest.verifyValidationForEmptyUser()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyValidationForEmptyUser()[pri:9, instance:testcases.AddTicketTest@1d9b7cce]" started-at="2023-08-11T22:46:22 IST" name="verifyValidationForEmptyUser" finished-at="2023-08-11T22:47:32 IST" duration-ms="70466" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyValidationForEmptyUser -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@1d9b7cce]" started-at="2023-08-11T22:47:32 IST" name="reportWrapUp" finished-at="2023-08-11T22:47:32 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyValidationForEmptyUser status=SUCCESS method=AddTicketTest.verifyValidationForEmptyUser()[pri:9, instance:testcases.AddTicketTest@1d9b7cce] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AddTicketTest.verifyValidationForEmptyUser()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="verifyValidationOnClientsField()[pri:10, instance:testcases.AddTicketTest@1d9b7cce]" started-at="2023-08-11T22:47:32 IST" name="verifyValidationOnClientsField" finished-at="2023-08-11T22:48:27 IST" duration-ms="55176" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyValidationOnClientsField -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@1d9b7cce]" started-at="2023-08-11T22:47:32 IST" name="beforeMethod" finished-at="2023-08-11T22:47:32 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AddTicketTest.verifyValidationOnClientsField()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@1d9b7cce]" started-at="2023-08-11T22:48:27 IST" name="reportWrapUp" finished-at="2023-08-11T22:48:27 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyValidationOnClientsField status=SUCCESS method=AddTicketTest.verifyValidationOnClientsField()[pri:10, instance:testcases.AddTicketTest@1d9b7cce] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AddTicketTest.verifyValidationOnClientsField()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@1d9b7cce]" started-at="2023-08-11T22:48:27 IST" name="beforeMethod" finished-at="2023-08-11T22:48:27 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AddTicketTest.checkAddMoreFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="checkAddMoreFunctionality()[pri:11, instance:testcases.AddTicketTest@1d9b7cce]" started-at="2023-08-11T22:48:27 IST" name="checkAddMoreFunctionality" finished-at="2023-08-11T22:49:23 IST" duration-ms="55630" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkAddMoreFunctionality -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@1d9b7cce]" started-at="2023-08-11T22:49:23 IST" name="reportWrapUp" finished-at="2023-08-11T22:49:23 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAddMoreFunctionality status=SUCCESS method=AddTicketTest.checkAddMoreFunctionality()[pri:11, instance:testcases.AddTicketTest@1d9b7cce] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AddTicketTest.checkAddMoreFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@1d9b7cce]" started-at="2023-08-11T22:49:23 IST" name="beforeMethod" finished-at="2023-08-11T22:49:23 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AddTicketTest.verifyCharctersInDescriptionField()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyCharctersInDescriptionField()[pri:12, instance:testcases.AddTicketTest@1d9b7cce]" started-at="2023-08-11T22:49:23 IST" name="verifyCharctersInDescriptionField" finished-at="2023-08-11T22:50:49 IST" duration-ms="85677" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCharctersInDescriptionField -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@1d9b7cce]" started-at="2023-08-11T22:50:49 IST" name="reportWrapUp" finished-at="2023-08-11T22:50:49 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCharctersInDescriptionField status=SUCCESS method=AddTicketTest.verifyCharctersInDescriptionField()[pri:12, instance:testcases.AddTicketTest@1d9b7cce] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AddTicketTest.verifyCharctersInDescriptionField()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@1d9b7cce]" started-at="2023-08-11T22:50:49 IST" name="beforeMethod" finished-at="2023-08-11T22:50:49 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AddTicketTest.verifyFontOfUserGuide()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyFontOfUserGuide()[pri:13, instance:testcases.AddTicketTest@1d9b7cce]" started-at="2023-08-11T22:50:49 IST" name="verifyFontOfUserGuide" finished-at="2023-08-11T22:51:37 IST" duration-ms="47902" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFontOfUserGuide -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@1d9b7cce]" started-at="2023-08-11T22:51:37 IST" name="reportWrapUp" finished-at="2023-08-11T22:51:37 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFontOfUserGuide status=SUCCESS method=AddTicketTest.verifyFontOfUserGuide()[pri:13, instance:testcases.AddTicketTest@1d9b7cce] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AddTicketTest.verifyFontOfUserGuide()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@1d9b7cce]" started-at="2023-08-11T22:51:37 IST" name="beforeMethod" finished-at="2023-08-11T22:51:37 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.AddTicketTest.addTicket()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addTicket()[pri:14, instance:testcases.AddTicketTest@1d9b7cce]" started-at="2023-08-11T22:51:37 IST" name="addTicket" finished-at="2023-08-11T22:53:17 IST" duration-ms="100447" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addTicket -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.AddTicketTest@1d9b7cce]" started-at="2023-08-11T22:53:17 IST" name="reportWrapUp" finished-at="2023-08-11T22:53:17 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addTicket status=SUCCESS method=AddTicketTest.addTicket()[pri:14, instance:testcases.AddTicketTest@1d9b7cce] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.AddTicketTest.addTicket()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
      </class> <!-- testcases.AddTicketTest -->
      <class name="testcases.TicketListingTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.TicketListingTest@1a451d4d]" started-at="2023-08-11T23:31:48 IST" name="setUp" finished-at="2023-08-11T23:32:06 IST" duration-ms="17903" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1a451d4d]" started-at="2023-08-11T23:32:06 IST" name="beforeMethod" finished-at="2023-08-11T23:32:06 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyUrlOnClickingBreadCrumb()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUrlOnClickingBreadCrumb()[pri:0, instance:testcases.TicketListingTest@1a451d4d]" started-at="2023-08-11T23:32:06 IST" name="verifyUrlOnClickingBreadCrumb" finished-at="2023-08-11T23:33:13 IST" duration-ms="66225" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUrlOnClickingBreadCrumb -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1a451d4d]" started-at="2023-08-11T23:33:13 IST" name="reportWrapUp" finished-at="2023-08-11T23:33:13 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUrlOnClickingBreadCrumb status=SUCCESS method=TicketListingTest.verifyUrlOnClickingBreadCrumb()[pri:0, instance:testcases.TicketListingTest@1a451d4d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyUrlOnClickingBreadCrumb()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1a451d4d]" started-at="2023-08-11T23:33:13 IST" name="beforeMethod" finished-at="2023-08-11T23:33:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyDeleteTicketFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyDeleteTicketFunctionality()[pri:1, instance:testcases.TicketListingTest@1a451d4d]" started-at="2023-08-11T23:33:13 IST" name="verifyDeleteTicketFunctionality" finished-at="2023-08-11T23:38:08 IST" duration-ms="295064" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDeleteTicketFunctionality -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1a451d4d]" started-at="2023-08-11T23:38:08 IST" name="reportWrapUp" finished-at="2023-08-11T23:38:08 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDeleteTicketFunctionality status=SUCCESS method=TicketListingTest.verifyDeleteTicketFunctionality()[pri:1, instance:testcases.TicketListingTest@1a451d4d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyDeleteTicketFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1a451d4d]" started-at="2023-08-11T23:38:08 IST" name="beforeMethod" finished-at="2023-08-11T23:38:08 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyResetButtonFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyResetButtonFunctionality()[pri:2, instance:testcases.TicketListingTest@1a451d4d]" started-at="2023-08-11T23:38:08 IST" name="verifyResetButtonFunctionality" finished-at="2023-08-11T23:40:26 IST" duration-ms="138779" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.clear()" because "element" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.clear()" because "element" is null
at org.testng.Assert.fail(Assert.java:99)
at utils.WebBasePage.enter(WebBasePage.java:64)
at pageobjects.UserLoginPage.enterUserName(UserLoginPage.java:77)
at pageobjects.UserLoginPage.forcefulLogOutLogin(UserLoginPage.java:123)
at action.LoginAction.logoutLogin(LoginAction.java:26)
at testcases.TicketListingTest.verifyResetButtonFunctionality(TicketListingTest.java:63)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyResetButtonFunctionality -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1a451d4d]" started-at="2023-08-11T23:40:26 IST" name="reportWrapUp" finished-at="2023-08-11T23:40:28 IST" duration-ms="1764" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyResetButtonFunctionality status=FAILURE method=TicketListingTest.verifyResetButtonFunctionality()[pri:2, instance:testcases.TicketListingTest@1a451d4d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyResetButtonFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1a451d4d]" started-at="2023-08-11T23:40:28 IST" name="beforeMethod" finished-at="2023-08-11T23:40:28 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyExpandCollapseFeature()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyExpandCollapseFeature()[pri:3, instance:testcases.TicketListingTest@1a451d4d]" started-at="2023-08-11T23:40:28 IST" name="verifyExpandCollapseFeature" finished-at="2023-08-11T23:40:59 IST" duration-ms="31123" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyExpandCollapseFeature -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1a451d4d]" started-at="2023-08-11T23:40:59 IST" name="reportWrapUp" finished-at="2023-08-11T23:40:59 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyExpandCollapseFeature status=SUCCESS method=TicketListingTest.verifyExpandCollapseFeature()[pri:3, instance:testcases.TicketListingTest@1a451d4d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyExpandCollapseFeature()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="verifySearchFunctionality()[pri:4, instance:testcases.TicketListingTest@1a451d4d]" started-at="2023-08-11T23:40:59 IST" name="verifySearchFunctionality" finished-at="2023-08-11T23:42:16 IST" duration-ms="76382" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.getText()" because "ele" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.getText()" because "ele" is null
at org.testng.Assert.fail(Assert.java:99)
at utils.WebBasePage.getText(WebBasePage.java:106)
at pageobjects.TicketListingPage.matchSearchedValues(TicketListingPage.java:182)
at action.TicketListingAction.validateSearch(TicketListingAction.java:99)
at testcases.TicketListingTest.verifySearchFunctionality(TicketListingTest.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchFunctionality -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1a451d4d]" started-at="2023-08-11T23:40:59 IST" name="beforeMethod" finished-at="2023-08-11T23:40:59 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifySearchFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1a451d4d]" started-at="2023-08-11T23:42:16 IST" name="reportWrapUp" finished-at="2023-08-11T23:42:16 IST" duration-ms="324" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySearchFunctionality status=FAILURE method=TicketListingTest.verifySearchFunctionality()[pri:4, instance:testcases.TicketListingTest@1a451d4d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifySearchFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1a451d4d]" started-at="2023-08-11T23:42:16 IST" name="beforeMethod" finished-at="2023-08-11T23:42:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyUnassignedTicketWidget()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnassignedTicketWidget()[pri:5, instance:testcases.TicketListingTest@1a451d4d]" started-at="2023-08-11T23:42:16 IST" name="verifyUnassignedTicketWidget" finished-at="2023-08-11T23:43:26 IST" duration-ms="69504" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnassignedTicketWidget -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1a451d4d]" started-at="2023-08-11T23:43:26 IST" name="reportWrapUp" finished-at="2023-08-11T23:43:26 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUnassignedTicketWidget status=SUCCESS method=TicketListingTest.verifyUnassignedTicketWidget()[pri:5, instance:testcases.TicketListingTest@1a451d4d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyUnassignedTicketWidget()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1a451d4d]" started-at="2023-08-11T23:43:26 IST" name="beforeMethod" finished-at="2023-08-11T23:43:26 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyReplyCount()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyReplyCount()[pri:6, instance:testcases.TicketListingTest@1a451d4d]" started-at="2023-08-11T23:43:26 IST" name="verifyReplyCount" finished-at="2023-08-11T23:44:40 IST" duration-ms="74190" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyReplyCount -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1a451d4d]" started-at="2023-08-11T23:44:40 IST" name="reportWrapUp" finished-at="2023-08-11T23:44:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyReplyCount status=SUCCESS method=TicketListingTest.verifyReplyCount()[pri:6, instance:testcases.TicketListingTest@1a451d4d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyReplyCount()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1a451d4d]" started-at="2023-08-11T23:44:40 IST" name="beforeMethod" finished-at="2023-08-11T23:44:40 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyFollowUpFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyFollowUpFunctionality()[pri:7, instance:testcases.TicketListingTest@1a451d4d]" started-at="2023-08-11T23:44:40 IST" name="verifyFollowUpFunctionality" finished-at="2023-08-11T23:45:47 IST" duration-ms="66743" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFollowUpFunctionality -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1a451d4d]" started-at="2023-08-11T23:45:47 IST" name="reportWrapUp" finished-at="2023-08-11T23:45:47 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFollowUpFunctionality status=SUCCESS method=TicketListingTest.verifyFollowUpFunctionality()[pri:7, instance:testcases.TicketListingTest@1a451d4d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyFollowUpFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="verifyMergeButtonFunctionality()[pri:8, instance:testcases.TicketListingTest@1a451d4d]" started-at="2023-08-11T23:45:47 IST" name="verifyMergeButtonFunctionality" finished-at="2023-08-11T23:47:13 IST" duration-ms="86796" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Action Button -  element not present]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Action Button -  element not present
at org.testng.Assert.fail(Assert.java:99)
at utils.WebBasePage.clickByJavascript(WebBasePage.java:285)
at pageobjects.TicketListingPage.clickOnActionButton(TicketListingPage.java:108)
at action.TicketListingAction.actionButton(TicketListingAction.java:68)
at action.TicketListingAction.viewTicket(TicketListingAction.java:77)
at testcases.TicketListingTest.verifyMergeButtonFunctionality(TicketListingTest.java:173)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMergeButtonFunctionality -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1a451d4d]" started-at="2023-08-11T23:45:47 IST" name="beforeMethod" finished-at="2023-08-11T23:45:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyMergeButtonFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1a451d4d]" started-at="2023-08-11T23:47:13 IST" name="reportWrapUp" finished-at="2023-08-11T23:47:14 IST" duration-ms="610" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyMergeButtonFunctionality status=FAILURE method=TicketListingTest.verifyMergeButtonFunctionality()[pri:8, instance:testcases.TicketListingTest@1a451d4d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyMergeButtonFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1a451d4d]" started-at="2023-08-11T23:47:14 IST" name="beforeMethod" finished-at="2023-08-11T23:47:14 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyUpdateTicketFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUpdateTicketFunctionality()[pri:9, instance:testcases.TicketListingTest@1a451d4d]" started-at="2023-08-11T23:47:14 IST" name="verifyUpdateTicketFunctionality" finished-at="2023-08-11T23:48:38 IST" duration-ms="84426" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUpdateTicketFunctionality -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1a451d4d]" started-at="2023-08-11T23:48:38 IST" name="reportWrapUp" finished-at="2023-08-11T23:48:38 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUpdateTicketFunctionality status=SUCCESS method=TicketListingTest.verifyUpdateTicketFunctionality()[pri:9, instance:testcases.TicketListingTest@1a451d4d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyUpdateTicketFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="verifyNotesFunctionality()[pri:10, instance:testcases.TicketListingTest@1a451d4d]" started-at="2023-08-11T23:48:38 IST" name="verifyNotesFunctionality" finished-at="2023-08-11T23:49:56 IST" duration-ms="77170" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyNotesFunctionality -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1a451d4d]" started-at="2023-08-11T23:48:38 IST" name="beforeMethod" finished-at="2023-08-11T23:48:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyNotesFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1a451d4d]" started-at="2023-08-11T23:49:56 IST" name="reportWrapUp" finished-at="2023-08-11T23:49:56 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyNotesFunctionality status=SUCCESS method=TicketListingTest.verifyNotesFunctionality()[pri:10, instance:testcases.TicketListingTest@1a451d4d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyNotesFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1a451d4d]" started-at="2023-08-11T23:49:56 IST" name="beforeMethod" finished-at="2023-08-11T23:49:56 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyAttachmentTabFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyAttachmentTabFunctionality()[pri:11, instance:testcases.TicketListingTest@1a451d4d]" started-at="2023-08-11T23:49:56 IST" name="verifyAttachmentTabFunctionality" finished-at="2023-08-11T23:50:52 IST" duration-ms="56306" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAttachmentTabFunctionality -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1a451d4d]" started-at="2023-08-11T23:50:52 IST" name="reportWrapUp" finished-at="2023-08-11T23:50:52 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAttachmentTabFunctionality status=SUCCESS method=TicketListingTest.verifyAttachmentTabFunctionality()[pri:11, instance:testcases.TicketListingTest@1a451d4d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyAttachmentTabFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1a451d4d]" started-at="2023-08-11T23:50:52 IST" name="beforeMethod" finished-at="2023-08-11T23:50:52 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyWidgetsFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyWidgetsFunctionality()[pri:12, instance:testcases.TicketListingTest@1a451d4d]" started-at="2023-08-11T23:50:52 IST" name="verifyWidgetsFunctionality" finished-at="2023-08-11T23:51:36 IST" duration-ms="43911" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyWidgetsFunctionality -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1a451d4d]" started-at="2023-08-11T23:51:36 IST" name="reportWrapUp" finished-at="2023-08-11T23:51:36 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWidgetsFunctionality status=SUCCESS method=TicketListingTest.verifyWidgetsFunctionality()[pri:12, instance:testcases.TicketListingTest@1a451d4d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyWidgetsFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1a451d4d]" started-at="2023-08-11T23:51:36 IST" name="beforeMethod" finished-at="2023-08-11T23:51:36 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyCannedReplyFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyCannedReplyFunctionality()[pri:13, instance:testcases.TicketListingTest@1a451d4d]" started-at="2023-08-11T23:51:36 IST" name="verifyCannedReplyFunctionality" finished-at="2023-08-11T23:52:37 IST" duration-ms="61712" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCannedReplyFunctionality -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1a451d4d]" started-at="2023-08-11T23:52:37 IST" name="reportWrapUp" finished-at="2023-08-11T23:52:37 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCannedReplyFunctionality status=SUCCESS method=TicketListingTest.verifyCannedReplyFunctionality()[pri:13, instance:testcases.TicketListingTest@1a451d4d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyCannedReplyFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1a451d4d]" started-at="2023-08-11T23:52:37 IST" name="beforeMethod" finished-at="2023-08-11T23:52:37 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyDraftReplyFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyDraftReplyFunctionality()[pri:14, instance:testcases.TicketListingTest@1a451d4d]" started-at="2023-08-11T23:52:37 IST" name="verifyDraftReplyFunctionality" finished-at="2023-08-11T23:53:43 IST" duration-ms="65605" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDraftReplyFunctionality -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketListingTest@1a451d4d]" started-at="2023-08-11T23:53:43 IST" name="reportWrapUp" finished-at="2023-08-11T23:53:43 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDraftReplyFunctionality status=SUCCESS method=TicketListingTest.verifyDraftReplyFunctionality()[pri:14, instance:testcases.TicketListingTest@1a451d4d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketListingTest.verifyDraftReplyFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
      </class> <!-- testcases.TicketListingTest -->
      <class name="testcases.SLATest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.SLATest@42e99e4a]" started-at="2023-08-11T23:00:48 IST" name="setUp" finished-at="2023-08-11T23:01:02 IST" duration-ms="13781" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@42e99e4a]" started-at="2023-08-11T23:01:02 IST" name="beforeMethod" finished-at="2023-08-11T23:01:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.SLATest.verifyAddSLA()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyAddSLA()[pri:0, instance:testcases.SLATest@42e99e4a]" started-at="2023-08-11T23:01:02 IST" name="verifyAddSLA" finished-at="2023-08-11T23:04:40 IST" duration-ms="218492" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.clear()" because "element" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.clear()" because "element" is null
at org.testng.Assert.fail(Assert.java:99)
at utils.WebBasePage.enter(WebBasePage.java:64)
at pageobjects.SLAPage.searchPolicyName(SLAPage.java:35)
at action.SLAAction.searchPolicy(SLAAction.java:25)
at testcases.SLATest.verifyAddSLA(SLATest.java:33)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Policy checkbox clicked]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyAddSLA -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@42e99e4a]" started-at="2023-08-11T23:04:40 IST" name="reportWrapUp" finished-at="2023-08-11T23:04:41 IST" duration-ms="774" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAddSLA status=FAILURE method=SLATest.verifyAddSLA()[pri:0, instance:testcases.SLATest@42e99e4a] output=Policy checkbox clicked]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.SLATest.verifyAddSLA()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@42e99e4a]" started-at="2023-08-11T23:04:41 IST" name="beforeMethod" finished-at="2023-08-11T23:04:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.SLATest.verifyMandatoryValidation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyMandatoryValidation()[pri:1, instance:testcases.SLATest@42e99e4a]" started-at="2023-08-11T23:04:41 IST" name="verifyMandatoryValidation" finished-at="2023-08-11T23:06:26 IST" duration-ms="104567" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Policy checkbox clicked]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyMandatoryValidation -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@42e99e4a]" started-at="2023-08-11T23:06:26 IST" name="reportWrapUp" finished-at="2023-08-11T23:06:26 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyMandatoryValidation status=SUCCESS method=SLATest.verifyMandatoryValidation()[pri:1, instance:testcases.SLATest@42e99e4a] output=Policy checkbox clicked]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.SLATest.verifyMandatoryValidation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@42e99e4a]" started-at="2023-08-11T23:06:26 IST" name="beforeMethod" finished-at="2023-08-11T23:06:26 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.SLATest.VerifyCharactersValidation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyCharactersValidation()[pri:2, instance:testcases.SLATest@42e99e4a]" started-at="2023-08-11T23:06:26 IST" name="VerifyCharactersValidation" finished-at="2023-08-11T23:08:02 IST" duration-ms="96041" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.clear()" because "element" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.clear()" because "element" is null
at org.testng.Assert.fail(Assert.java:99)
at utils.WebBasePage.enter(WebBasePage.java:64)
at pageobjects.UserLoginPage.enterUserName(UserLoginPage.java:77)
at pageobjects.UserLoginPage.forcefulLogOutLogin(UserLoginPage.java:123)
at action.LoginAction.logoutLogin(LoginAction.java:26)
at testcases.SLATest.VerifyCharactersValidation(SLATest.java:68)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyCharactersValidation -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@42e99e4a]" started-at="2023-08-11T23:08:02 IST" name="reportWrapUp" finished-at="2023-08-11T23:08:04 IST" duration-ms="2392" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyCharactersValidation status=FAILURE method=SLATest.VerifyCharactersValidation()[pri:2, instance:testcases.SLATest@42e99e4a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.SLATest.VerifyCharactersValidation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@42e99e4a]" started-at="2023-08-11T23:08:04 IST" name="beforeMethod" finished-at="2023-08-11T23:08:04 IST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.SLATest.verifyRadioButtonsFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyRadioButtonsFunctionality()[pri:3, instance:testcases.SLATest@42e99e4a]" started-at="2023-08-11T23:08:04 IST" name="verifyRadioButtonsFunctionality" finished-at="2023-08-11T23:08:36 IST" duration-ms="31512" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRadioButtonsFunctionality -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@42e99e4a]" started-at="2023-08-11T23:08:36 IST" name="reportWrapUp" finished-at="2023-08-11T23:08:36 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRadioButtonsFunctionality status=SUCCESS method=SLATest.verifyRadioButtonsFunctionality()[pri:3, instance:testcases.SLATest@42e99e4a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.SLATest.verifyRadioButtonsFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@42e99e4a]" started-at="2023-08-11T23:08:36 IST" name="beforeMethod" finished-at="2023-08-11T23:08:36 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.SLATest.verifyClientCategoryFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyClientCategoryFunctionality()[pri:4, instance:testcases.SLATest@42e99e4a]" started-at="2023-08-11T23:08:36 IST" name="verifyClientCategoryFunctionality" finished-at="2023-08-11T23:09:29 IST" duration-ms="53147" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Policy checkbox clicked]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyClientCategoryFunctionality -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@42e99e4a]" started-at="2023-08-11T23:09:29 IST" name="reportWrapUp" finished-at="2023-08-11T23:09:29 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyClientCategoryFunctionality status=SUCCESS method=SLATest.verifyClientCategoryFunctionality()[pri:4, instance:testcases.SLATest@42e99e4a] output=Policy checkbox clicked]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.SLATest.verifyClientCategoryFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@42e99e4a]" started-at="2023-08-11T23:09:29 IST" name="beforeMethod" finished-at="2023-08-11T23:09:29 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.SLATest.verifyDepartmentCategoryFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyDepartmentCategoryFunctionality()[pri:5, instance:testcases.SLATest@42e99e4a]" started-at="2023-08-11T23:09:29 IST" name="verifyDepartmentCategoryFunctionality" finished-at="2023-08-11T23:10:33 IST" duration-ms="64153" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Policy checkbox clicked]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDepartmentCategoryFunctionality -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@42e99e4a]" started-at="2023-08-11T23:10:33 IST" name="reportWrapUp" finished-at="2023-08-11T23:10:33 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDepartmentCategoryFunctionality status=SUCCESS method=SLATest.verifyDepartmentCategoryFunctionality()[pri:5, instance:testcases.SLATest@42e99e4a] output=Policy checkbox clicked]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.SLATest.verifyDepartmentCategoryFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@42e99e4a]" started-at="2023-08-11T23:10:33 IST" name="beforeMethod" finished-at="2023-08-11T23:10:33 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.SLATest.verifyProductCategoryFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyProductCategoryFunctionality()[pri:6, instance:testcases.SLATest@42e99e4a]" started-at="2023-08-11T23:10:33 IST" name="verifyProductCategoryFunctionality" finished-at="2023-08-11T23:11:37 IST" duration-ms="64318" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Policy checkbox clicked]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyProductCategoryFunctionality -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@42e99e4a]" started-at="2023-08-11T23:11:37 IST" name="reportWrapUp" finished-at="2023-08-11T23:11:37 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyProductCategoryFunctionality status=SUCCESS method=SLATest.verifyProductCategoryFunctionality()[pri:6, instance:testcases.SLATest@42e99e4a] output=Policy checkbox clicked]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.SLATest.verifyProductCategoryFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@42e99e4a]" started-at="2023-08-11T23:11:37 IST" name="beforeMethod" finished-at="2023-08-11T23:11:37 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.SLATest.verifyDeleteButtonFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyDeleteButtonFunctionality()[pri:7, instance:testcases.SLATest@42e99e4a]" started-at="2023-08-11T23:11:37 IST" name="verifyDeleteButtonFunctionality" finished-at="2023-08-11T23:12:43 IST" duration-ms="66157" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Policy checkbox clicked]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDeleteButtonFunctionality -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@42e99e4a]" started-at="2023-08-11T23:12:43 IST" name="reportWrapUp" finished-at="2023-08-11T23:12:43 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDeleteButtonFunctionality status=SUCCESS method=SLATest.verifyDeleteButtonFunctionality()[pri:7, instance:testcases.SLATest@42e99e4a] output=Policy checkbox clicked]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.SLATest.verifyDeleteButtonFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@42e99e4a]" started-at="2023-08-11T23:12:43 IST" name="beforeMethod" finished-at="2023-08-11T23:12:43 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.SLATest.verifyPolicyDatePickerFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyPolicyDatePickerFunctionality()[pri:8, instance:testcases.SLATest@42e99e4a]" started-at="2023-08-11T23:12:43 IST" name="verifyPolicyDatePickerFunctionality" finished-at="2023-08-11T23:13:31 IST" duration-ms="47375" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.getAttribute(String)" because "ele" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.getAttribute(String)" because "ele" is null
at org.testng.Assert.fail(Assert.java:99)
at utils.WebBasePage.getAtribute(WebBasePage.java:200)
at pageobjects.AddSLAPage.verifyPolicyDate(AddSLAPage.java:660)
at action.AddSLAAction.verifyPolicyDate(AddSLAAction.java:246)
at testcases.SLATest.verifyPolicyDatePickerFunctionality(SLATest.java:158)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPolicyDatePickerFunctionality -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@42e99e4a]" started-at="2023-08-11T23:13:31 IST" name="reportWrapUp" finished-at="2023-08-11T23:13:31 IST" duration-ms="377" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPolicyDatePickerFunctionality status=FAILURE method=SLATest.verifyPolicyDatePickerFunctionality()[pri:8, instance:testcases.SLATest@42e99e4a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.SLATest.verifyPolicyDatePickerFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@42e99e4a]" started-at="2023-08-11T23:13:31 IST" name="beforeMethod" finished-at="2023-08-11T23:13:31 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.SLATest.verifyBooleanFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyBooleanFunctionality()[pri:9, instance:testcases.SLATest@42e99e4a]" started-at="2023-08-11T23:13:31 IST" name="verifyBooleanFunctionality" finished-at="2023-08-11T23:14:37 IST" duration-ms="65474" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Policy checkbox clicked]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyBooleanFunctionality -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@42e99e4a]" started-at="2023-08-11T23:14:37 IST" name="reportWrapUp" finished-at="2023-08-11T23:14:37 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyBooleanFunctionality status=SUCCESS method=SLATest.verifyBooleanFunctionality()[pri:9, instance:testcases.SLATest@42e99e4a] output=Policy checkbox clicked]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.SLATest.verifyBooleanFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="verifyBooleanSaveButtonFunctionality()[pri:10, instance:testcases.SLATest@42e99e4a]" started-at="2023-08-11T23:14:37 IST" name="verifyBooleanSaveButtonFunctionality" finished-at="2023-08-11T23:15:47 IST" duration-ms="70813" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Policy checkbox clicked]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyBooleanSaveButtonFunctionality -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@42e99e4a]" started-at="2023-08-11T23:14:37 IST" name="beforeMethod" finished-at="2023-08-11T23:14:37 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.SLATest.verifyBooleanSaveButtonFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@42e99e4a]" started-at="2023-08-11T23:15:47 IST" name="reportWrapUp" finished-at="2023-08-11T23:15:47 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyBooleanSaveButtonFunctionality status=SUCCESS method=SLATest.verifyBooleanSaveButtonFunctionality()[pri:10, instance:testcases.SLATest@42e99e4a] output=Policy checkbox clicked]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.SLATest.verifyBooleanSaveButtonFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@42e99e4a]" started-at="2023-08-11T23:15:47 IST" name="beforeMethod" finished-at="2023-08-11T23:15:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.SLATest.verifyResponseTimeValidations()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyResponseTimeValidations()[pri:11, instance:testcases.SLATest@42e99e4a]" started-at="2023-08-11T23:15:47 IST" name="verifyResponseTimeValidations" finished-at="2023-08-11T23:17:14 IST" duration-ms="86608" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Policy checkbox clicked]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyResponseTimeValidations -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@42e99e4a]" started-at="2023-08-11T23:17:14 IST" name="reportWrapUp" finished-at="2023-08-11T23:17:14 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyResponseTimeValidations status=SUCCESS method=SLATest.verifyResponseTimeValidations()[pri:11, instance:testcases.SLATest@42e99e4a] output=Policy checkbox clicked]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.SLATest.verifyResponseTimeValidations()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method signature="verifyResolveTimeValidations()[pri:12, instance:testcases.SLATest@42e99e4a]" started-at="2023-08-11T23:17:14 IST" name="verifyResolveTimeValidations" finished-at="2023-08-11T23:18:37 IST" duration-ms="83315" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Policy checkbox clicked]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyResolveTimeValidations -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@42e99e4a]" started-at="2023-08-11T23:17:14 IST" name="beforeMethod" finished-at="2023-08-11T23:17:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.SLATest.verifyResolveTimeValidations()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.SLATest@42e99e4a]" started-at="2023-08-11T23:18:37 IST" name="reportWrapUp" finished-at="2023-08-11T23:18:37 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyResolveTimeValidations status=SUCCESS method=SLATest.verifyResolveTimeValidations()[pri:12, instance:testcases.SLATest@42e99e4a] output=Policy checkbox clicked]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.SLATest.verifyResolveTimeValidations()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
      </class> <!-- testcases.SLATest -->
      <class name="testcases.TicketDetailReportTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.TicketDetailReportTest@14dd9eb7]" started-at="2023-08-11T23:18:37 IST" name="setUp" finished-at="2023-08-11T23:18:50 IST" duration-ms="12304" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketDetailReportTest@14dd9eb7]" started-at="2023-08-11T23:18:50 IST" name="beforeMethod" finished-at="2023-08-11T23:18:50 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketDetailReportTest.verifySearchTicket()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifySearchTicket()[pri:0, instance:testcases.TicketDetailReportTest@14dd9eb7]" started-at="2023-08-11T23:18:50 IST" name="verifySearchTicket" finished-at="2023-08-11T23:21:35 IST" duration-ms="165230" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchTicket -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketDetailReportTest@14dd9eb7]" started-at="2023-08-11T23:21:35 IST" name="reportWrapUp" finished-at="2023-08-11T23:21:35 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySearchTicket status=SUCCESS method=TicketDetailReportTest.verifySearchTicket()[pri:0, instance:testcases.TicketDetailReportTest@14dd9eb7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketDetailReportTest.verifySearchTicket()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
      </class> <!-- testcases.TicketDetailReportTest -->
      <class name="testcases.TicketingServiceBoardTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.TicketingServiceBoardTest@62150f9e]" started-at="2023-08-11T23:27:30 IST" name="setUp" finished-at="2023-08-11T23:27:42 IST" duration-ms="11939" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingServiceBoardTest@62150f9e]" started-at="2023-08-11T23:27:42 IST" name="beforeMethod" finished-at="2023-08-11T23:27:42 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingServiceBoardTest.verifyServiceboardElements()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyServiceboardElements()[pri:0, instance:testcases.TicketingServiceBoardTest@62150f9e]" started-at="2023-08-11T23:27:42 IST" name="verifyServiceboardElements" finished-at="2023-08-11T23:28:20 IST" duration-ms="37671" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyServiceboardElements -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingServiceBoardTest@62150f9e]" started-at="2023-08-11T23:28:20 IST" name="reportWrapUp" finished-at="2023-08-11T23:28:20 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyServiceboardElements status=SUCCESS method=TicketingServiceBoardTest.verifyServiceboardElements()[pri:0, instance:testcases.TicketingServiceBoardTest@62150f9e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingServiceBoardTest.verifyServiceboardElements()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingServiceBoardTest@62150f9e]" started-at="2023-08-11T23:28:20 IST" name="beforeMethod" finished-at="2023-08-11T23:28:20 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingServiceBoardTest.verifyAddServiceBoardGroupOne()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyAddServiceBoardGroupOne()[pri:1, instance:testcases.TicketingServiceBoardTest@62150f9e]" started-at="2023-08-11T23:28:20 IST" name="verifyAddServiceBoardGroupOne" finished-at="2023-08-11T23:29:17 IST" duration-ms="57236" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAddServiceBoardGroupOne -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingServiceBoardTest@62150f9e]" started-at="2023-08-11T23:29:17 IST" name="reportWrapUp" finished-at="2023-08-11T23:29:17 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAddServiceBoardGroupOne status=SUCCESS method=TicketingServiceBoardTest.verifyAddServiceBoardGroupOne()[pri:1, instance:testcases.TicketingServiceBoardTest@62150f9e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingServiceBoardTest.verifyAddServiceBoardGroupOne()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingServiceBoardTest@62150f9e]" started-at="2023-08-11T23:29:17 IST" name="beforeMethod" finished-at="2023-08-11T23:29:17 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingServiceBoardTest.verifyAddServiceBoardGroupTwo()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyAddServiceBoardGroupTwo()[pri:2, instance:testcases.TicketingServiceBoardTest@62150f9e]" started-at="2023-08-11T23:29:17 IST" name="verifyAddServiceBoardGroupTwo" finished-at="2023-08-11T23:30:05 IST" duration-ms="47534" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAddServiceBoardGroupTwo -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingServiceBoardTest@62150f9e]" started-at="2023-08-11T23:30:05 IST" name="reportWrapUp" finished-at="2023-08-11T23:30:05 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAddServiceBoardGroupTwo status=SUCCESS method=TicketingServiceBoardTest.verifyAddServiceBoardGroupTwo()[pri:2, instance:testcases.TicketingServiceBoardTest@62150f9e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingServiceBoardTest.verifyAddServiceBoardGroupTwo()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingServiceBoardTest@62150f9e]" started-at="2023-08-11T23:30:05 IST" name="beforeMethod" finished-at="2023-08-11T23:30:05 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingServiceBoardTest.verifyCancelButtonFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyCancelButtonFunctionality()[pri:3, instance:testcases.TicketingServiceBoardTest@62150f9e]" started-at="2023-08-11T23:30:05 IST" name="verifyCancelButtonFunctionality" finished-at="2023-08-11T23:30:56 IST" duration-ms="51054" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCancelButtonFunctionality -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingServiceBoardTest@62150f9e]" started-at="2023-08-11T23:30:56 IST" name="reportWrapUp" finished-at="2023-08-11T23:30:56 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCancelButtonFunctionality status=SUCCESS method=TicketingServiceBoardTest.verifyCancelButtonFunctionality()[pri:3, instance:testcases.TicketingServiceBoardTest@62150f9e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingServiceBoardTest.verifyCancelButtonFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testcases.TicketingServiceBoardTest@62150f9e]" started-at="2023-08-11T23:30:56 IST" name="beforeMethod" finished-at="2023-08-11T23:30:56 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.TicketingServiceBoardTest.verifyUpdateServiceBoardNavigation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUpdateServiceBoardNavigation()[pri:4, instance:testcases.TicketingServiceBoardTest@62150f9e]" started-at="2023-08-11T23:30:56 IST" name="verifyUpdateServiceBoardNavigation" finished-at="2023-08-11T23:31:48 IST" duration-ms="52847" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUpdateServiceBoardNavigation -->
        <test-method is-config="true" signature="reportWrapUp(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:testcases.TicketingServiceBoardTest@62150f9e]" started-at="2023-08-11T23:31:48 IST" name="reportWrapUp" finished-at="2023-08-11T23:31:48 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUpdateServiceBoardNavigation status=SUCCESS method=TicketingServiceBoardTest.verifyUpdateServiceBoardNavigation()[pri:4, instance:testcases.TicketingServiceBoardTest@62150f9e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testcases.TicketingServiceBoardTest.verifyUpdateServiceBoardNavigation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportWrapUp -->
      </class> <!-- testcases.TicketingServiceBoardTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
